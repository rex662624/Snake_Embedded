

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Jan 05 16:25:50 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           ; Version 1.44
    43                           ; Generated 14/09/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F4520 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMRAM
    78  00126A                     __pidataCOMRAM:
    79                           	opt stack 0
    80                           
    81                           ;initializer for _address2
    82  00126A  00C0               	dw	192
    83                           
    84                           ;initializer for _address1
    85  00126C  0080               	dw	128
    86                           
    87                           	psect	idataBANK0
    88  000FC6                     __pidataBANK0:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _Durations
    92  000FC6  01                 	db	1
    93  000FC7  01                 	db	1
    94  000FC8  01                 	db	1
    95  000FC9  01                 	db	1
    96  000FCA  01                 	db	1
    97  000FCB  01                 	db	1
    98  000FCC  03                 	db	3
    99  000FCD  01                 	db	1
   100  000FCE  01                 	db	1
   101  000FCF  01                 	db	1
   102  000FD0  01                 	db	1
   103  000FD1  01                 	db	1
   104  000FD2  03                 	db	3
   105  000FD3  01                 	db	1
   106  000FD4  01                 	db	1
   107  000FD5  01                 	db	1
   108  000FD6  01                 	db	1
   109  000FD7  01                 	db	1
   110  000FD8  01                 	db	1
   111  000FD9  02                 	db	2
   112  000FDA  01                 	db	1
   113  000FDB  01                 	db	1
   114  000FDC  01                 	db	1
   115  000FDD  01                 	db	1
   116  000FDE  01                 	db	1
   117  000FDF  02                 	db	2
   118  000FE0  01                 	db	1
   119  000FE1  01                 	db	1
   120  000FE2  01                 	db	1
   121  000FE3  01                 	db	1
   122  000FE4  01                 	db	1
   123  000FE5  02                 	db	2
   124  000FE6  01                 	db	1
   125  000FE7  01                 	db	1
   126  000FE8  01                 	db	1
   127  000FE9  01                 	db	1
   128  000FEA  01                 	db	1
   129  000FEB  01                 	db	1
   130  000FEC  01                 	db	1
   131  000FED  01                 	db	1
   132  000FEE  01                 	db	1
   133  000FEF  01                 	db	1
   134  000FF0  01                 	db	1
   135  000FF1  01                 	db	1
   136  000FF2  01                 	db	1
   137  000FF3  01                 	db	1
   138  000FF4  01                 	db	1
   139  000FF5  01                 	db	1
   140  000FF6  01                 	db	1
   141  000FF7  01                 	db	1
   142  000FF8  01                 	db	1
   143  000FF9  01                 	db	1
   144  000FFA  01                 	db	1
   145  000FFB  02                 	db	2
   146  000FFC  01                 	db	1
   147  000FFD  01                 	db	1
   148  000FFE  01                 	db	1
   149  000FFF  01                 	db	1
   150  001000  01                 	db	1
   151  001001  01                 	db	1
   152  001002  01                 	db	1
   153  001003  01                 	db	1
   154  001004  01                 	db	1
   155  001005  01                 	db	1
   156  001006  01                 	db	1
   157  001007  01                 	db	1
   158  001008  01                 	db	1
   159  001009  01                 	db	1
   160  00100A  01                 	db	1
   161  00100B  02                 	db	2
   162  00100C  01                 	db	1
   163  00100D  01                 	db	1
   164  00100E  01                 	db	1
   165  00100F  01                 	db	1
   166  001010  01                 	db	1
   167  001011  01                 	db	1
   168  001012  01                 	db	1
   169  001013  01                 	db	1
   170  001014  02                 	db	2
   171  001015  01                 	db	1
   172  001016  01                 	db	1
   173  001017  01                 	db	1
   174  001018  01                 	db	1
   175  001019  02                 	db	2
   176  00101A  01                 	db	1
   177  00101B  01                 	db	1
   178  00101C  01                 	db	1
   179  00101D  01                 	db	1
   180  00101E  01                 	db	1
   181  00101F  01                 	db	1
   182  001020  02                 	db	2
   183  001021  01                 	db	1
   184  001022  01                 	db	1
   185  001023  01                 	db	1
   186  001024  01                 	db	1
   187  001025  01                 	db	1
   188  001026  02                 	db	2
   189  001027  01                 	db	1
   190  001028  01                 	db	1
   191  001029  01                 	db	1
   192  00102A  01                 	db	1
   193  00102B  01                 	db	1
   194  00102C  01                 	db	1
   195  00102D  01                 	db	1
   196  00102E  01                 	db	1
   197  00102F  01                 	db	1
   198  001030  02                 	db	2
   199  001031  01                 	db	1
   200  001032  01                 	db	1
   201  001033  01                 	db	1
   202  001034  01                 	db	1
   203  001035  01                 	db	1
   204  001036  03                 	db	3
   205  001037  00                 	db	0
   206                           
   207                           	psect	idataBANK1
   208  000DB6                     __pidataBANK1:
   209                           	opt stack 0
   210                           
   211                           ;initializer for _Notes
   212  000DB6  01B8               	dw	440
   213  000DB8  01EA               	dw	490
   214  000DBA  020B               	dw	523
   215  000DBC  01EE               	dw	494
   216  000DBE  020B               	dw	523
   217  000DC0  0293               	dw	659
   218  000DC2  01EE               	dw	494
   219  000DC4  014A               	dw	330
   220  000DC6  01B8               	dw	440
   221  000DC8  0188               	dw	392
   222  000DCA  01B8               	dw	440
   223  000DCC  020B               	dw	523
   224  000DCE  0188               	dw	392
   225  000DD0  014A               	dw	330
   226  000DD2  015D               	dw	349
   227  000DD4  014A               	dw	330
   228  000DD6  015D               	dw	349
   229  000DD8  020B               	dw	523
   230  000DDA  020B               	dw	523
   231  000DDC  014A               	dw	330
   232  000DDE  020B               	dw	523
   233  000DE0  01EE               	dw	494
   234  000DE2  0172               	dw	370
   235  000DE4  0172               	dw	370
   236  000DE6  01EE               	dw	494
   237  000DE8  01EE               	dw	494
   238  000DEA  01B8               	dw	440
   239  000DEC  01EE               	dw	494
   240  000DEE  020B               	dw	523
   241  000DF0  01EE               	dw	494
   242  000DF2  020B               	dw	523
   243  000DF4  0293               	dw	659
   244  000DF6  01EE               	dw	494
   245  000DF8  014A               	dw	330
   246  000DFA  014A               	dw	330
   247  000DFC  01B8               	dw	440
   248  000DFE  0188               	dw	392
   249  000E00  01B8               	dw	440
   250  000E02  020B               	dw	523
   251  000E04  0188               	dw	392
   252  000E06  014A               	dw	330
   253  000E08  015D               	dw	349
   254  000E0A  020B               	dw	523
   255  000E0C  01EA               	dw	490
   256  000E0E  01EA               	dw	490
   257  000E10  020B               	dw	523
   258  000E12  0242               	dw	578
   259  000E14  0293               	dw	659
   260  000E16  020B               	dw	523
   261  000E18  020B               	dw	523
   262  000E1A  01EA               	dw	490
   263  000E1C  01B8               	dw	440
   264  000E1E  01EA               	dw	490
   265  000E20  019F               	dw	415
   266  000E22  01B8               	dw	440
   267  000E24  020B               	dw	523
   268  000E26  0242               	dw	578
   269  000E28  0293               	dw	659
   270  000E2A  0242               	dw	578
   271  000E2C  02BA               	dw	698
   272  000E2E  0310               	dw	784
   273  000E30  0242               	dw	578
   274  000E32  0188               	dw	392
   275  000E34  0242               	dw	578
   276  000E36  020B               	dw	523
   277  000E38  01EA               	dw	490
   278  000E3A  020B               	dw	523
   279  000E3C  020B               	dw	523
   280  000E3E  0242               	dw	578
   281  000E40  0293               	dw	659
   282  000E42  0293               	dw	659
   283  000E44  01B8               	dw	440
   284  000E46  01EA               	dw	490
   285  000E48  020B               	dw	523
   286  000E4A  01EA               	dw	490
   287  000E4C  020B               	dw	523
   288  000E4E  0242               	dw	578
   289  000E50  020B               	dw	523
   290  000E52  0188               	dw	392
   291  000E54  0188               	dw	392
   292  000E56  02BA               	dw	698
   293  000E58  0293               	dw	659
   294  000E5A  0242               	dw	578
   295  000E5C  020B               	dw	523
   296  000E5E  0293               	dw	659
   297  000E60  01B8               	dw	440
   298  000E62  01EA               	dw	490
   299  000E64  020B               	dw	523
   300  000E66  01EA               	dw	490
   301  000E68  020B               	dw	523
   302  000E6A  0293               	dw	659
   303  000E6C  01EA               	dw	490
   304  000E6E  014A               	dw	330
   305  000E70  01B8               	dw	440
   306  000E72  0188               	dw	392
   307  000E74  01B8               	dw	440
   308  000E76  020B               	dw	523
   309  000E78  0188               	dw	392
   310  000E7A  014A               	dw	330
   311  000E7C  015D               	dw	349
   312  000E7E  020B               	dw	523
   313  000E80  01EA               	dw	490
   314  000E82  01EA               	dw	490
   315  000E84  020B               	dw	523
   316  000E86  0242               	dw	578
   317  000E88  0293               	dw	659
   318  000E8A  020B               	dw	523
   319  000E8C  020B               	dw	523
   320  000E8E  020B               	dw	523
   321  000E90  01EA               	dw	490
   322  000E92  01B8               	dw	440
   323  000E94  01EA               	dw	490
   324  000E96  019F               	dw	415
   325  000E98  01B8               	dw	440
   326  0000                     _TRISCbits	set	3988
   327  0000                     _PORTD	set	3971
   328  0000                     _LATCbits	set	3979
   329  0000                     _TRISD	set	3989
   330  0000                     _TRISC	set	3988
   331  0000                     _RC1	set	31761
   332  0000                     _RC0	set	31760
   333  0000                     _TMR1	set	4046
   334  0000                     _RCSTAbits	set	4011
   335  0000                     _SPBRG	set	4015
   336  0000                     _TXSTAbits	set	4012
   337  0000                     _BAUDCONbits	set	4024
   338  0000                     _RCREG	set	4014
   339  0000                     _T1CON	set	4045
   340  0000                     _PIR1bits	set	3998
   341  0000                     _IPR1bits	set	3999
   342  0000                     _PIE1bits	set	3997
   343  0000                     _RCONbits	set	4048
   344  0000                     _OSCCONbits	set	4051
   345  0000                     _RCIF	set	31989
   346  0000                     _TMR1IF	set	31984
   347  0000                     _TMR1IE	set	31976
   348  0000                     _T0CONbits	set	4053
   349  0000                     _TMR0L	set	4054
   350  0000                     _TMR0H	set	4055
   351  0000                     _INTCONbits	set	4082
   352  0000                     _TMR0IF	set	32658
   353  0000                     _TMR0IE	set	32661
   354                           
   355                           	psect	smallconst
   356  000600                     __psmallconst:
   357                           	opt stack 0
   358  000600  00                 	db	0
   359  000601                     STR_2:
   360  000601  52                 	db	82	;'R'
   361  000602  65                 	db	101	;'e'
   362  000603  61                 	db	97	;'a'
   363  000604  64                 	db	100	;'d'
   364  000605  79                 	db	121	;'y'
   365  000606  20                 	db	32
   366  000607  54                 	db	84	;'T'
   367  000608  6F                 	db	111	;'o'
   368  000609  20                 	db	32
   369  00060A  50                 	db	80	;'P'
   370  00060B  6C                 	db	108	;'l'
   371  00060C  61                 	db	97	;'a'
   372  00060D  79                 	db	121	;'y'
   373  00060E  00                 	db	0
   374  00060F                     STR_4:
   375  00060F  47                 	db	71	;'G'
   376  000610  61                 	db	97	;'a'
   377  000611  6D                 	db	109	;'m'
   378  000612  65                 	db	101	;'e'
   379  000613  21                 	db	33
   380  000614  00                 	db	0
   381  000615                     STR_1:
   382  000615  50                 	db	80	;'P'
   383  000616  49                 	db	73	;'I'
   384  000617  43                 	db	67	;'C'
   385  000618  31                 	db	49	;'1'
   386  000619  38                 	db	56	;'8'
   387  00061A  00                 	db	0
   388  0000                     
   389                           ; #config settings
   390  00061B  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           	psect	cinit
   393  000F48                     __pcinit:
   394                           	opt stack 0
   395  000F48                     start_initialization:
   396                           	opt stack 0
   397  000F48                     __initialization:
   398                           	opt stack 0
   399                           
   400                           ; Initialize objects allocated to BANK1 (228 bytes)
   401                           ; load TBLPTR registers with __pidataBANK1
   402  000F48  0EB6               	movlw	low __pidataBANK1
   403  000F4A  6EF6               	movwf	tblptrl,c
   404  000F4C  0E0D               	movlw	high __pidataBANK1
   405  000F4E  6EF7               	movwf	tblptrh,c
   406  000F50  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   407  000F52  6EF8               	movwf	tblptru,c
   408  000F54  EE01  F000         	lfsr	0,__pdataBANK1
   409  000F58  EE10 F0E4          	lfsr	1,228
   410  000F5C                     copy_data0:
   411  000F5C  0009               	tblrd		*+
   412  000F5E  CFF5 FFEE          	movff	tablat,postinc0
   413  000F62  50E5               	movf	postdec1,w,c
   414  000F64  50E1               	movf	fsr1l,w,c
   415  000F66  E1FA               	bnz	copy_data0
   416                           
   417                           ; Initialize objects allocated to BANK0 (114 bytes)
   418                           ; load TBLPTR registers with __pidataBANK0
   419  000F68  0EC6               	movlw	low __pidataBANK0
   420  000F6A  6EF6               	movwf	tblptrl,c
   421  000F6C  0E0F               	movlw	high __pidataBANK0
   422  000F6E  6EF7               	movwf	tblptrh,c
   423  000F70  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   424  000F72  6EF8               	movwf	tblptru,c
   425  000F74  EE00  F080         	lfsr	0,__pdataBANK0
   426  000F78  EE10 F072          	lfsr	1,114
   427  000F7C                     copy_data1:
   428  000F7C  0009               	tblrd		*+
   429  000F7E  CFF5 FFEE          	movff	tablat,postinc0
   430  000F82  50E5               	movf	postdec1,w,c
   431  000F84  50E1               	movf	fsr1l,w,c
   432  000F86  E1FA               	bnz	copy_data1
   433                           
   434                           ; Initialize objects allocated to COMRAM (4 bytes)
   435                           ; load TBLPTR registers with __pidataCOMRAM
   436  000F88  0E6A               	movlw	low __pidataCOMRAM
   437  000F8A  6EF6               	movwf	tblptrl,c
   438  000F8C  0E12               	movlw	high __pidataCOMRAM
   439  000F8E  6EF7               	movwf	tblptrh,c
   440  000F90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   441  000F92  6EF8               	movwf	tblptru,c
   442  000F94  EE00  F05A         	lfsr	0,__pdataCOMRAM
   443  000F98  EE10 F004          	lfsr	1,4
   444  000F9C                     copy_data2:
   445  000F9C  0009               	tblrd		*+
   446  000F9E  CFF5 FFEE          	movff	tablat,postinc0
   447  000FA2  50E5               	movf	postdec1,w,c
   448  000FA4  50E1               	movf	fsr1l,w,c
   449  000FA6  E1FA               	bnz	copy_data2
   450                           
   451                           ; Clear objects allocated to COMRAM (10 bytes)
   452  000FA8  EE00  F050         	lfsr	0,__pbssCOMRAM
   453  000FAC  0E0A               	movlw	10
   454  000FAE                     clear_0:
   455  000FAE  6AEE               	clrf	postinc0,c
   456  000FB0  06E8               	decf	wreg,f,c
   457  000FB2  E1FD               	bnz	clear_0
   458  000FB4                     end_of_initialization:
   459                           	opt stack 0
   460  000FB4                     __end_of__initialization:
   461                           	opt stack 0
   462  000FB4  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   463  000FB6  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   464  000FB8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   465  000FBA  6EF8               	movwf	tblptru,c
   466  000FBC  0E06               	movlw	high __Lsmallconst
   467  000FBE  6EF7               	movwf	tblptrh,c
   468  000FC0  0100               	movlb	0
   469  000FC2  EFBD  F004         	goto	_main	;jump to C main() function
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	bssCOMRAM
   480  000050                     __pbssCOMRAM:
   481                           	opt stack 0
   482  000050                     _countout:
   483                           	opt stack 0
   484  000050                     	ds	2
   485  000052                     _mode:
   486                           	opt stack 0
   487  000052                     	ds	2
   488  000054                     _receive:
   489                           	opt stack 0
   490  000054                     	ds	2
   491  000056                     _count:
   492                           	opt stack 0
   493  000056                     	ds	2
   494  000058                     _TIMER_L:
   495                           	opt stack 0
   496  000058                     	ds	1
   497  000059                     _TIMER_H:
   498                           	opt stack 0
   499  000059                     	ds	1
   500                           tblptru	equ	0xFF8
   501                           tblptrh	equ	0xFF7
   502                           tblptrl	equ	0xFF6
   503                           tablat	equ	0xFF5
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           postdec1	equ	0xFE5
   507                           fsr1l	equ	0xFE1
   508                           
   509                           	psect	dataCOMRAM
   510  00005A                     __pdataCOMRAM:
   511                           	opt stack 0
   512  00005A                     _address2:
   513                           	opt stack 0
   514  00005A                     	ds	2
   515  00005C                     _address1:
   516                           	opt stack 0
   517  00005C                     	ds	2
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	dataBANK0
   528  000080                     __pdataBANK0:
   529                           	opt stack 0
   530  000080                     _Durations:
   531                           	opt stack 0
   532  000080                     	ds	114
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK1
   543  000100                     __pdataBANK1:
   544                           	opt stack 0
   545  000100                     _Notes:
   546                           	opt stack 0
   547  000100                     	ds	228
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackCOMRAM
   558  000001                     __pcstackCOMRAM:
   559                           	opt stack 0
   560  000001                     i2Delay_us@us:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x0
   564  000001                     	ds	2
   565  000003                     ??i2_Delay_us:
   566                           
   567                           ; 1 bytes @ 0x2
   568  000003                     	ds	2
   569  000005                     i2Cmd@Value:
   570                           	opt stack 0
   571  000005                     i2Data@Value:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x4
   575  000005                     	ds	2
   576  000007                     i2Send2Lcd@Lcd:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x6
   580  000007                     	ds	2
   581  000009                     i2Send2Lcd@Adr:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x8
   585  000009                     	ds	1
   586  00000A                     ??_tc_int:
   587                           
   588                           ; 1 bytes @ 0x9
   589  00000A                     	ds	19
   590  00001D                     ??_Delay_Seconds:
   591  00001D                     ?___wmul:
   592                           	opt stack 0
   593  00001D                     ?___ftpack:
   594                           	opt stack 0
   595  00001D                     Delay_Ms@s:
   596                           	opt stack 0
   597  00001D                     Delay_us@us:
   598                           	opt stack 0
   599  00001D                     ___wmul@multiplier:
   600                           	opt stack 0
   601  00001D                     ___ftpack@arg:
   602                           	opt stack 0
   603                           
   604                           ; 3 bytes @ 0x1C
   605  00001D                     	ds	1
   606  00001E                     Delay_Seconds@s:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x1D
   610  00001E                     	ds	1
   611  00001F                     ??_Delay_us:
   612  00001F                     ??_Delay_Ms:
   613  00001F                     Delay_Seconds@j:
   614                           	opt stack 0
   615  00001F                     ___wmul@multiplicand:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x1E
   619  00001F                     	ds	1
   620  000020                     Delay_Seconds@i:
   621                           	opt stack 0
   622  000020                     ___ftpack@exp:
   623                           	opt stack 0
   624  000020                     Delay_Ms@j:
   625                           	opt stack 0
   626                           
   627                           ; 2 bytes @ 0x1F
   628  000020                     	ds	1
   629  000021                     ___ftpack@sign:
   630                           	opt stack 0
   631  000021                     Cmd@Value:
   632                           	opt stack 0
   633  000021                     Data@Value:
   634                           	opt stack 0
   635  000021                     ___wmul@product:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x20
   639  000021                     	ds	1
   640  000022                     ??___ftpack:
   641                           
   642                           ; 1 bytes @ 0x21
   643  000022                     	ds	1
   644  000023                     Send2Lcd@Lcd:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x22
   648  000023                     	ds	2
   649  000025                     ?___awtoft:
   650                           	opt stack 0
   651  000025                     ?___lwtoft:
   652                           	opt stack 0
   653  000025                     Send2Lcd@Adr:
   654                           	opt stack 0
   655  000025                     ___awtoft@c:
   656                           	opt stack 0
   657  000025                     ___lwtoft@c:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x24
   661  000025                     	ds	3
   662  000028                     ?___ftdiv:
   663                           	opt stack 0
   664  000028                     ___awtoft@sign:
   665                           	opt stack 0
   666  000028                     ___ftdiv@f1:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x27
   670  000028                     	ds	1
   671  000029                     ?___ftneg:
   672                           	opt stack 0
   673  000029                     ___ftneg@f1:
   674                           	opt stack 0
   675                           
   676                           ; 3 bytes @ 0x28
   677  000029                     	ds	2
   678  00002B                     ___ftdiv@f2:
   679                           	opt stack 0
   680                           
   681                           ; 3 bytes @ 0x2A
   682  00002B                     	ds	1
   683  00002C                     ?___ftadd:
   684                           	opt stack 0
   685  00002C                     ___ftadd@f1:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x2B
   689  00002C                     	ds	2
   690  00002E                     ??___ftdiv:
   691                           
   692                           ; 1 bytes @ 0x2D
   693  00002E                     	ds	1
   694  00002F                     ___ftadd@f2:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x2E
   698  00002F                     	ds	2
   699  000031                     ___ftdiv@cntr:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x30
   703  000031                     	ds	1
   704  000032                     ??___ftadd:
   705  000032                     ___ftdiv@f3:
   706                           	opt stack 0
   707                           
   708                           ; 3 bytes @ 0x31
   709  000032                     	ds	3
   710  000035                     ___ftadd@sign:
   711                           	opt stack 0
   712  000035                     ___ftdiv@exp:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x34
   716  000035                     	ds	1
   717  000036                     ___ftadd@exp2:
   718                           	opt stack 0
   719  000036                     ___ftdiv@sign:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x35
   723  000036                     	ds	1
   724  000037                     ___ftadd@exp1:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x36
   728  000037                     	ds	1
   729  000038                     ?___fttol:
   730                           	opt stack 0
   731  000038                     ___fttol@f1:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x37
   735  000038                     	ds	4
   736  00003C                     ??___fttol:
   737                           
   738                           ; 1 bytes @ 0x3B
   739  00003C                     	ds	5
   740  000041                     ___fttol@sign1:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x40
   744  000041                     	ds	1
   745  000042                     ___fttol@lval:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x41
   749  000042                     	ds	4
   750  000046                     ___fttol@exp1:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x45
   754  000046                     	ds	1
   755  000047                     Sound_Play@freq:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x46
   759  000047                     	ds	2
   760  000049                     Sound_Play@duration:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x48
   764  000049                     	ds	2
   765  00004B                     Sound_Play@period:
   766                           	opt stack 0
   767                           
   768                           ; 3 bytes @ 0x4A
   769  00004B                     	ds	3
   770  00004E                     ??_main:
   771                           
   772                           ; 1 bytes @ 0x4D
   773  00004E                     	ds	1
   774  00004F                     main@i:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x4E
   778  00004F                     	ds	1
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 137 in file "newmain.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  i               1   78[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   807 ;;      Params:         0       0       0       0       0       0       0
   808 ;;      Locals:         1       0       0       0       0       0       0
   809 ;;      Temps:          1       0       0       0       0       0       0
   810 ;;      Totals:         2       0       0       0       0       0       0
   811 ;;Total ram usage:        2 bytes
   812 ;; Hardware stack levels required when called:    7
   813 ;; This function calls:
   814 ;;		_Cmd
   815 ;;		_Delay_Ms
   816 ;;		_Delay_Seconds
   817 ;;		_Delay_us
   818 ;;		_Myusartinit
   819 ;;		_Send2Lcd
   820 ;;		_Sound_Play
   821 ;;		___wmul
   822 ;; This function is called by:
   823 ;;		Startup code after reset
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text0
   828  00097A                     __ptext0:
   829                           	opt stack 0
   830  00097A                     _main:
   831                           	opt stack 24
   832                           
   833                           ;newmain.c: 139: unsigned char i;
   834                           ;newmain.c: 141: TRISC=0X00;
   835                           
   836                           ;incstack = 0
   837  00097A  0E00               	movlw	0
   838  00097C  6E94               	movwf	3988,c	;volatile
   839                           
   840                           ;newmain.c: 142: TRISD=0X00;
   841  00097E  0E00               	movlw	0
   842  000980  6E95               	movwf	3989,c	;volatile
   843                           
   844                           ;newmain.c: 143: Delay_us(25);
   845  000982  0E00               	movlw	0
   846  000984  6E1E               	movwf	Delay_us@us+1,c
   847  000986  0E19               	movlw	25
   848  000988  6E1D               	movwf	Delay_us@us,c
   849  00098A  ECD8  F008         	call	_Delay_us	;wreg free
   850                           
   851                           ;newmain.c: 144: Cmd(0X30);
   852  00098E  0E00               	movlw	0
   853  000990  6E22               	movwf	Cmd@Value+1,c
   854  000992  0E30               	movlw	48
   855  000994  6E21               	movwf	Cmd@Value,c
   856  000996  EC11  F009         	call	_Cmd	;wreg free
   857                           
   858                           ;newmain.c: 145: Delay_us(25);
   859  00099A  0E00               	movlw	0
   860  00099C  6E1E               	movwf	Delay_us@us+1,c
   861  00099E  0E19               	movlw	25
   862  0009A0  6E1D               	movwf	Delay_us@us,c
   863  0009A2  ECD8  F008         	call	_Delay_us	;wreg free
   864                           
   865                           ;newmain.c: 146: Cmd(0X30);
   866  0009A6  0E00               	movlw	0
   867  0009A8  6E22               	movwf	Cmd@Value+1,c
   868  0009AA  0E30               	movlw	48
   869  0009AC  6E21               	movwf	Cmd@Value,c
   870  0009AE  EC11  F009         	call	_Cmd	;wreg free
   871                           
   872                           ;newmain.c: 147: Delay_us(25);
   873  0009B2  0E00               	movlw	0
   874  0009B4  6E1E               	movwf	Delay_us@us+1,c
   875  0009B6  0E19               	movlw	25
   876  0009B8  6E1D               	movwf	Delay_us@us,c
   877  0009BA  ECD8  F008         	call	_Delay_us	;wreg free
   878                           
   879                           ;newmain.c: 148: Cmd(0X30);
   880  0009BE  0E00               	movlw	0
   881  0009C0  6E22               	movwf	Cmd@Value+1,c
   882  0009C2  0E30               	movlw	48
   883  0009C4  6E21               	movwf	Cmd@Value,c
   884  0009C6  EC11  F009         	call	_Cmd	;wreg free
   885                           
   886                           ;newmain.c: 149: Delay_us(25);
   887  0009CA  0E00               	movlw	0
   888  0009CC  6E1E               	movwf	Delay_us@us+1,c
   889  0009CE  0E19               	movlw	25
   890  0009D0  6E1D               	movwf	Delay_us@us,c
   891  0009D2  ECD8  F008         	call	_Delay_us	;wreg free
   892                           
   893                           ;newmain.c: 150: Cmd(0X38);
   894  0009D6  0E00               	movlw	0
   895  0009D8  6E22               	movwf	Cmd@Value+1,c
   896  0009DA  0E38               	movlw	56
   897  0009DC  6E21               	movwf	Cmd@Value,c
   898  0009DE  EC11  F009         	call	_Cmd	;wreg free
   899                           
   900                           ;newmain.c: 151: Cmd(0X06);
   901  0009E2  0E00               	movlw	0
   902  0009E4  6E22               	movwf	Cmd@Value+1,c
   903  0009E6  0E06               	movlw	6
   904  0009E8  6E21               	movwf	Cmd@Value,c
   905  0009EA  EC11  F009         	call	_Cmd	;wreg free
   906                           
   907                           ;newmain.c: 152: Cmd(0X0C);
   908  0009EE  0E00               	movlw	0
   909  0009F0  6E22               	movwf	Cmd@Value+1,c
   910  0009F2  0E0C               	movlw	12
   911  0009F4  6E21               	movwf	Cmd@Value,c
   912  0009F6  EC11  F009         	call	_Cmd	;wreg free
   913                           
   914                           ;newmain.c: 153: Cmd(0X01);
   915  0009FA  0E00               	movlw	0
   916  0009FC  6E22               	movwf	Cmd@Value+1,c
   917  0009FE  0E01               	movlw	1
   918  000A00  6E21               	movwf	Cmd@Value,c
   919  000A02  EC11  F009         	call	_Cmd	;wreg free
   920                           
   921                           ;newmain.c: 154: Delay_us(1000);
   922  000A06  0E03               	movlw	3
   923  000A08  6E1E               	movwf	Delay_us@us+1,c
   924  000A0A  0EE8               	movlw	232
   925  000A0C  6E1D               	movwf	Delay_us@us,c
   926  000A0E  ECD8  F008         	call	_Delay_us	;wreg free
   927                           
   928                           ;newmain.c: 155: Send2Lcd(0x80,"PIC18");
   929  000A12  0E15               	movlw	low STR_1
   930  000A14  6E23               	movwf	Send2Lcd@Lcd,c
   931  000A16  0E06               	movlw	high STR_1
   932  000A18  6E24               	movwf	Send2Lcd@Lcd+1,c
   933  000A1A  0E80               	movlw	128
   934  000A1C  EC1C  F008         	call	_Send2Lcd
   935                           
   936                           ;newmain.c: 156: Send2Lcd(0xc0,"Ready To Play"); ;
   937  000A20  0E01               	movlw	low STR_2
   938  000A22  6E23               	movwf	Send2Lcd@Lcd,c
   939  000A24  0E06               	movlw	high STR_2
   940  000A26  6E24               	movwf	Send2Lcd@Lcd+1,c
   941  000A28  0EC0               	movlw	192
   942  000A2A  EC1C  F008         	call	_Send2Lcd
   943                           
   944                           ;newmain.c: 158: OSCCONbits.IRCF2= 1;
   945  000A2E  8CD3               	bsf	4051,6,c	;volatile
   946                           
   947                           ;newmain.c: 159: OSCCONbits.IRCF1= 1;
   948  000A30  8AD3               	bsf	4051,5,c	;volatile
   949                           
   950                           ;newmain.c: 160: OSCCONbits.IRCF0= 1;
   951  000A32  88D3               	bsf	4051,4,c	;volatile
   952                           
   953                           ;newmain.c: 163: TRISC = 0;
   954  000A34  0E00               	movlw	0
   955  000A36  6E94               	movwf	3988,c	;volatile
   956                           
   957                           ;newmain.c: 164: LATCbits.LATC2 = 0;
   958  000A38  948B               	bcf	3979,2,c	;volatile
   959                           
   960                           ;newmain.c: 165: T0CONbits.TMR0ON = 0;
   961  000A3A  9ED5               	bcf	4053,7,c	;volatile
   962                           
   963                           ;newmain.c: 166: T0CONbits.T08BIT = 0;
   964  000A3C  9CD5               	bcf	4053,6,c	;volatile
   965                           
   966                           ;newmain.c: 167: T0CONbits.T0CS = 0;
   967  000A3E  9AD5               	bcf	4053,5,c	;volatile
   968                           
   969                           ;newmain.c: 168: T0CONbits.T0SE = 0;
   970  000A40  98D5               	bcf	4053,4,c	;volatile
   971                           
   972                           ;newmain.c: 169: T0CONbits.PSA = 0;
   973  000A42  96D5               	bcf	4053,3,c	;volatile
   974                           
   975                           ;newmain.c: 170: T0CONbits.T0PS = 0;
   976  000A44  90D5               	bcf	4053,0,c	;volatile
   977  000A46  92D5               	bcf	4053,1,c	;volatile
   978  000A48  94D5               	bcf	4053,2,c	;volatile
   979                           
   980                           ;newmain.c: 171: INTCONbits.TMR0IE = 1;
   981  000A4A  8AF2               	bsf	intcon,5,c	;volatile
   982                           
   983                           ;newmain.c: 173: Myusartinit();
   984  000A4C  ECF8  F008         	call	_Myusartinit	;wreg free
   985                           
   986                           ;newmain.c: 177: RCONbits.IPEN=0x01;
   987  000A50  8ED0               	bsf	4048,7,c	;volatile
   988                           
   989                           ;newmain.c: 178: PIE1bits.TMR1IE=1;
   990  000A52  809D               	bsf	3997,0,c	;volatile
   991                           
   992                           ;newmain.c: 179: IPR1bits.TMR1IP=1;
   993  000A54  809F               	bsf	3999,0,c	;volatile
   994                           
   995                           ;newmain.c: 180: PIR1bits.TMR1IF=0;
   996  000A56  909E               	bcf	3998,0,c	;volatile
   997                           
   998                           ;newmain.c: 181: T1CON = 0xB5;
   999  000A58  0EB5               	movlw	181
  1000  000A5A  6ECD               	movwf	4045,c	;volatile
  1001                           
  1002                           ;newmain.c: 182: INTCONbits.GIE=1;
  1003  000A5C  8EF2               	bsf	intcon,7,c	;volatile
  1004                           
  1005                           ;newmain.c: 183: TMR1=0x85ED;
  1006  000A5E  0E85               	movlw	133
  1007  000A60  6ECF               	movwf	4047,c	;volatile
  1008  000A62  0EED               	movlw	237
  1009  000A64  6ECE               	movwf	4046,c	;volatile
  1010  000A66                     
  1011                           ;newmain.c: 187: {
  1012                           ;newmain.c: 188: if(receive!=0)
  1013  000A66  5054               	movf	_receive,w,c
  1014  000A68  1055               	iorwf	_receive+1,w,c
  1015  000A6A  B4D8               	btfsc	status,2,c
  1016  000A6C  D033               	goto	u1270
  1017                           
  1018                           ;newmain.c: 189: for(i=0;i<114;i++)
  1019  000A6E  0E00               	movlw	0
  1020  000A70  6E4F               	movwf	main@i,c
  1021  000A72                     l1641:
  1022  000A72  0E71               	movlw	113
  1023  000A74  644F               	cpfsgt	main@i,c
  1024  000A76  D001               	goto	l102
  1025  000A78  D02D               	goto	u1270
  1026  000A7A                     l102:
  1027                           
  1028                           ;newmain.c: 190: {
  1029                           ;newmain.c: 192: Sound_Play(Notes[i], 350 * Durations[i]);
  1030  000A7A  504F               	movf	main@i,w,c
  1031  000A7C  0D02               	mullw	2
  1032  000A7E  0E00               	movlw	low _Notes
  1033  000A80  24F3               	addwf	prodl,w,c
  1034  000A82  6ED9               	movwf	fsr2l,c
  1035  000A84  0E01               	movlw	high _Notes
  1036  000A86  20F4               	addwfc	prodh,w,c
  1037  000A88  6EDA               	movwf	fsr2h,c
  1038  000A8A  CFDE F047          	movff	postinc2,Sound_Play@freq
  1039  000A8E  CFDD F048          	movff	postdec2,Sound_Play@freq+1
  1040  000A92  504F               	movf	main@i,w,c
  1041  000A94  0D01               	mullw	1
  1042  000A96  0E80               	movlw	low _Durations
  1043  000A98  24F3               	addwf	prodl,w,c
  1044  000A9A  6ED9               	movwf	fsr2l,c
  1045  000A9C  0E00               	movlw	high _Durations
  1046  000A9E  20F4               	addwfc	prodh,w,c
  1047  000AA0  6EDA               	movwf	fsr2h,c
  1048  000AA2  50DF               	movf	indf2,w,c
  1049  000AA4  6E4E               	movwf	??_main& (0+255),c
  1050  000AA6  504E               	movf	??_main,w,c
  1051  000AA8  6E1D               	movwf	___wmul@multiplier,c
  1052  000AAA  6A1E               	clrf	___wmul@multiplier+1,c
  1053  000AAC  0E01               	movlw	1
  1054  000AAE  6E20               	movwf	___wmul@multiplicand+1,c
  1055  000AB0  0E5E               	movlw	94
  1056  000AB2  6E1F               	movwf	___wmul@multiplicand,c
  1057  000AB4  ECA1  F008         	call	___wmul	;wreg free
  1058  000AB8  C01D  F049         	movff	?___wmul,Sound_Play@duration
  1059  000ABC  C01E  F04A         	movff	?___wmul+1,Sound_Play@duration+1
  1060  000AC0  EC6E  F005         	call	_Sound_Play	;wreg free
  1061                           
  1062                           ;newmain.c: 193: Delay_Ms(100);
  1063  000AC4  0E00               	movlw	0
  1064  000AC6  6E1E               	movwf	Delay_Ms@s+1,c
  1065  000AC8  0E64               	movlw	100
  1066  000ACA  6E1D               	movwf	Delay_Ms@s,c
  1067  000ACC  EC8C  F008         	call	_Delay_Ms	;wreg free
  1068  000AD0  2A4F               	incf	main@i,f,c
  1069  000AD2  D7CF               	goto	l1641
  1070  000AD4                     u1270:
  1071                           
  1072                           ;newmain.c: 194: }
  1073                           ;newmain.c: 195: Delay_Seconds(1);
  1074  000AD4  0E01               	movlw	1
  1075  000AD6  EC72  F008         	call	_Delay_Seconds
  1076                           
  1077                           ;newmain.c: 196: }
  1078  000ADA  D7C5               	goto	l100
  1079  000ADC                     __end_of_main:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           prodh	equ	0xFF4
  1086                           prodl	equ	0xFF3
  1087                           intcon	equ	0xFF2
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           indf2	equ	0xFDF
  1093                           postinc2	equ	0xFDE
  1094                           postdec2	equ	0xFDD
  1095                           fsr2h	equ	0xFDA
  1096                           fsr2l	equ	0xFD9
  1097                           status	equ	0xFD8
  1098                           
  1099 ;; *************** function ___wmul *****************
  1100 ;; Defined at:
  1101 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  multiplier      2   28[COMRAM] unsigned int 
  1104 ;;  multiplicand    2   30[COMRAM] unsigned int 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  product         2   32[COMRAM] unsigned int 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  2   28[COMRAM] unsigned int 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, prodl, prodh
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1116 ;;      Params:         4       0       0       0       0       0       0
  1117 ;;      Locals:         2       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0
  1119 ;;      Totals:         6       0       0       0       0       0       0
  1120 ;;Total ram usage:        6 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    4
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131  001142                     __ptext1:
  1132                           	opt stack 0
  1133  001142                     ___wmul:
  1134                           	opt stack 26
  1135                           
  1136                           ;incstack = 0
  1137  001142  501D               	movf	___wmul@multiplier,w,c
  1138  001144  021F               	mulwf	___wmul@multiplicand,c
  1139  001146  CFF3 F021          	movff	prodl,___wmul@product
  1140  00114A  CFF4 F022          	movff	prodh,___wmul@product+1
  1141  00114E  501D               	movf	___wmul@multiplier,w,c
  1142  001150  0220               	mulwf	___wmul@multiplicand+1,c
  1143  001152  50F3               	movf	prodl,w,c
  1144  001154  2622               	addwf	___wmul@product+1,f,c
  1145  001156  501E               	movf	___wmul@multiplier+1,w,c
  1146  001158  021F               	mulwf	___wmul@multiplicand,c
  1147  00115A  50F3               	movf	prodl,w,c
  1148  00115C  2622               	addwf	___wmul@product+1,f,c
  1149  00115E  C021  F01D         	movff	___wmul@product,?___wmul
  1150  001162  C022  F01E         	movff	___wmul@product+1,?___wmul+1
  1151  001166  0012               	return	
  1152  001168                     __end_of___wmul:
  1153                           	opt stack 0
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           prodh	equ	0xFF4
  1159                           prodl	equ	0xFF3
  1160                           intcon	equ	0xFF2
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           postdec1	equ	0xFE5
  1164                           fsr1l	equ	0xFE1
  1165                           indf2	equ	0xFDF
  1166                           postinc2	equ	0xFDE
  1167                           postdec2	equ	0xFDD
  1168                           fsr2h	equ	0xFDA
  1169                           fsr2l	equ	0xFD9
  1170                           status	equ	0xFD8
  1171                           
  1172 ;; *************** function _Sound_Play *****************
  1173 ;; Defined at:
  1174 ;;		line 94 in file "newmain.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  freq            2   70[COMRAM] unsigned int 
  1177 ;;  duration        2   72[COMRAM] unsigned int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  period          3   74[COMRAM] float 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1189 ;;      Params:         4       0       0       0       0       0       0
  1190 ;;      Locals:         3       0       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0
  1192 ;;      Totals:         7       0       0       0       0       0       0
  1193 ;;Total ram usage:        7 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    6
  1196 ;; This function calls:
  1197 ;;		_Delay_Ms
  1198 ;;		___awtoft
  1199 ;;		___ftadd
  1200 ;;		___ftdiv
  1201 ;;		___ftneg
  1202 ;;		___fttol
  1203 ;;		___lwtoft
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text2
  1210  000ADC                     __ptext2:
  1211                           	opt stack 0
  1212  000ADC                     _Sound_Play:
  1213                           	opt stack 24
  1214                           
  1215                           ;newmain.c: 96: float period;
  1216                           ;newmain.c: 97: period = 500000.0/freq;
  1217                           
  1218                           ;incstack = 0
  1219  000ADC  0E24               	movlw	36
  1220  000ADE  6E28               	movwf	___ftdiv@f1,c
  1221  000AE0  0EF4               	movlw	244
  1222  000AE2  6E29               	movwf	___ftdiv@f1+1,c
  1223  000AE4  0E48               	movlw	72
  1224  000AE6  6E2A               	movwf	___ftdiv@f1+2,c
  1225  000AE8  C047  F025         	movff	Sound_Play@freq,___lwtoft@c
  1226  000AEC  C048  F026         	movff	Sound_Play@freq+1,___lwtoft@c+1
  1227  000AF0  ECB4  F008         	call	___lwtoft	;wreg free
  1228  000AF4  C025  F02B         	movff	?___lwtoft,___ftdiv@f2
  1229  000AF8  C026  F02C         	movff	?___lwtoft+1,___ftdiv@f2+1
  1230  000AFC  C027  F02D         	movff	?___lwtoft+2,___ftdiv@f2+2
  1231  000B00  EC68  F006         	call	___ftdiv	;wreg free
  1232  000B04  C028  F04B         	movff	?___ftdiv,Sound_Play@period
  1233  000B08  C029  F04C         	movff	?___ftdiv+1,Sound_Play@period+1
  1234  000B0C  C02A  F04D         	movff	?___ftdiv+2,Sound_Play@period+2
  1235                           
  1236                           ;newmain.c: 98: period = 65536-period;
  1237  000B10  C04B  F029         	movff	Sound_Play@period,___ftneg@f1
  1238  000B14  C04C  F02A         	movff	Sound_Play@period+1,___ftneg@f1+1
  1239  000B18  C04D  F02B         	movff	Sound_Play@period+2,___ftneg@f1+2
  1240  000B1C  ECC6  F008         	call	___ftneg	;wreg free
  1241  000B20  C029  F02C         	movff	?___ftneg,___ftadd@f1
  1242  000B24  C02A  F02D         	movff	?___ftneg+1,___ftadd@f1+1
  1243  000B28  C02B  F02E         	movff	?___ftneg+2,___ftadd@f1+2
  1244  000B2C  0E00               	movlw	0
  1245  000B2E  6E2F               	movwf	___ftadd@f2,c
  1246  000B30  0E80               	movlw	128
  1247  000B32  6E30               	movwf	___ftadd@f2+1,c
  1248  000B34  0E47               	movlw	71
  1249  000B36  6E31               	movwf	___ftadd@f2+2,c
  1250  000B38  ECE7  F003         	call	___ftadd	;wreg free
  1251  000B3C  C02C  F04B         	movff	?___ftadd,Sound_Play@period
  1252  000B40  C02D  F04C         	movff	?___ftadd+1,Sound_Play@period+1
  1253  000B44  C02E  F04D         	movff	?___ftadd+2,Sound_Play@period+2
  1254                           
  1255                           ;newmain.c: 99: TIMER_H = (char)(period/256);
  1256  000B48  0E00               	movlw	0
  1257  000B4A  6E2B               	movwf	___ftdiv@f2,c
  1258  000B4C  0E80               	movlw	128
  1259  000B4E  6E2C               	movwf	___ftdiv@f2+1,c
  1260  000B50  0E43               	movlw	67
  1261  000B52  6E2D               	movwf	___ftdiv@f2+2,c
  1262  000B54  C04B  F028         	movff	Sound_Play@period,___ftdiv@f1
  1263  000B58  C04C  F029         	movff	Sound_Play@period+1,___ftdiv@f1+1
  1264  000B5C  C04D  F02A         	movff	Sound_Play@period+2,___ftdiv@f1+2
  1265  000B60  EC68  F006         	call	___ftdiv	;wreg free
  1266  000B64  C028  F038         	movff	?___ftdiv,___fttol@f1
  1267  000B68  C029  F039         	movff	?___ftdiv+1,___fttol@f1+1
  1268  000B6C  C02A  F03A         	movff	?___ftdiv+2,___fttol@f1+2
  1269  000B70  ECEE  F005         	call	___fttol	;wreg free
  1270  000B74  5038               	movf	?___fttol,w,c
  1271  000B76  6E59               	movwf	_TIMER_H,c
  1272                           
  1273                           ;newmain.c: 100: TIMER_L = (char)(period -256*TIMER_H);
  1274  000B78  C04B  F02F         	movff	Sound_Play@period,___ftadd@f2
  1275  000B7C  C04C  F030         	movff	Sound_Play@period+1,___ftadd@f2+1
  1276  000B80  C04D  F031         	movff	Sound_Play@period+2,___ftadd@f2+2
  1277  000B84  5059               	movf	_TIMER_H,w,c
  1278  000B86  6E26               	movwf	___awtoft@c+1,c
  1279  000B88  6A25               	clrf	___awtoft@c,c
  1280  000B8A  EC56  F008         	call	___awtoft	;wreg free
  1281  000B8E  C025  F029         	movff	?___awtoft,___ftneg@f1
  1282  000B92  C026  F02A         	movff	?___awtoft+1,___ftneg@f1+1
  1283  000B96  C027  F02B         	movff	?___awtoft+2,___ftneg@f1+2
  1284  000B9A  ECC6  F008         	call	___ftneg	;wreg free
  1285  000B9E  C029  F02C         	movff	?___ftneg,___ftadd@f1
  1286  000BA2  C02A  F02D         	movff	?___ftneg+1,___ftadd@f1+1
  1287  000BA6  C02B  F02E         	movff	?___ftneg+2,___ftadd@f1+2
  1288  000BAA  ECE7  F003         	call	___ftadd	;wreg free
  1289  000BAE  C02C  F038         	movff	?___ftadd,___fttol@f1
  1290  000BB2  C02D  F039         	movff	?___ftadd+1,___fttol@f1+1
  1291  000BB6  C02E  F03A         	movff	?___ftadd+2,___fttol@f1+2
  1292  000BBA  ECEE  F005         	call	___fttol	;wreg free
  1293  000BBE  5038               	movf	?___fttol,w,c
  1294  000BC0  6E58               	movwf	_TIMER_L,c
  1295                           
  1296                           ;newmain.c: 101: TMR0H = TIMER_H;
  1297  000BC2  C059  FFD7         	movff	_TIMER_H,4055	;volatile
  1298                           
  1299                           ;newmain.c: 102: TMR0L = TIMER_L;
  1300  000BC6  C058  FFD6         	movff	_TIMER_L,4054	;volatile
  1301                           
  1302                           ;newmain.c: 103: T0CONbits.TMR0ON = 1;
  1303  000BCA  8ED5               	bsf	4053,7,c	;volatile
  1304                           
  1305                           ;newmain.c: 104: Delay_Ms(duration);
  1306  000BCC  C049  F01D         	movff	Sound_Play@duration,Delay_Ms@s
  1307  000BD0  C04A  F01E         	movff	Sound_Play@duration+1,Delay_Ms@s+1
  1308  000BD4  EC8C  F008         	call	_Delay_Ms	;wreg free
  1309                           
  1310                           ;newmain.c: 105: T0CONbits.TMR0ON = 0;
  1311  000BD8  9ED5               	bcf	4053,7,c	;volatile
  1312  000BDA  0012               	return		;funcret
  1313  000BDC                     __end_of_Sound_Play:
  1314                           	opt stack 0
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           intcon	equ	0xFF2
  1322                           postinc0	equ	0xFEE
  1323                           wreg	equ	0xFE8
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           indf2	equ	0xFDF
  1327                           postinc2	equ	0xFDE
  1328                           postdec2	equ	0xFDD
  1329                           fsr2h	equ	0xFDA
  1330                           fsr2l	equ	0xFD9
  1331                           status	equ	0xFD8
  1332                           
  1333 ;; *************** function ___lwtoft *****************
  1334 ;; Defined at:
  1335 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwtoft.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  c               2   36[COMRAM] unsigned int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  3   36[COMRAM] float 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1349 ;;      Params:         3       0       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0
  1352 ;;      Totals:         3       0       0       0       0       0       0
  1353 ;;Total ram usage:        3 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    5
  1356 ;; This function calls:
  1357 ;;		___ftpack
  1358 ;; This function is called by:
  1359 ;;		_Sound_Play
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text3
  1364  001168                     __ptext3:
  1365                           	opt stack 0
  1366  001168                     ___lwtoft:
  1367                           	opt stack 24
  1368                           
  1369                           ;incstack = 0
  1370  001168  C025  F01D         	movff	___lwtoft@c,___ftpack@arg
  1371  00116C  C026  F01E         	movff	___lwtoft@c+1,___ftpack@arg+1
  1372  001170  6A1F               	clrf	___ftpack@arg+2,c
  1373  001172  0E8E               	movlw	142
  1374  001174  6E20               	movwf	___ftpack@exp,c
  1375  001176  0E00               	movlw	0
  1376  001178  6E21               	movwf	___ftpack@sign,c
  1377  00117A  EC4D  F007         	call	___ftpack	;wreg free
  1378  00117E  C01D  F025         	movff	?___ftpack,?___lwtoft
  1379  001182  C01E  F026         	movff	?___ftpack+1,?___lwtoft+1
  1380  001186  C01F  F027         	movff	?___ftpack+2,?___lwtoft+2
  1381  00118A  0012               	return	
  1382  00118C                     __end_of___lwtoft:
  1383                           	opt stack 0
  1384                           tblptru	equ	0xFF8
  1385                           tblptrh	equ	0xFF7
  1386                           tblptrl	equ	0xFF6
  1387                           tablat	equ	0xFF5
  1388                           prodh	equ	0xFF4
  1389                           prodl	equ	0xFF3
  1390                           intcon	equ	0xFF2
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           postdec1	equ	0xFE5
  1394                           fsr1l	equ	0xFE1
  1395                           indf2	equ	0xFDF
  1396                           postinc2	equ	0xFDE
  1397                           postdec2	equ	0xFDD
  1398                           fsr2h	equ	0xFDA
  1399                           fsr2l	equ	0xFD9
  1400                           status	equ	0xFD8
  1401                           
  1402 ;; *************** function ___fttol *****************
  1403 ;; Defined at:
  1404 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\fttol.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  f1              3   55[COMRAM] float 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  lval            4   65[COMRAM] unsigned long 
  1409 ;;  exp1            1   69[COMRAM] unsigned char 
  1410 ;;  sign1           1   64[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  4   55[COMRAM] long 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         4       0       0       0       0       0       0
  1421 ;;      Locals:         6       0       0       0       0       0       0
  1422 ;;      Temps:          5       0       0       0       0       0       0
  1423 ;;      Totals:        15       0       0       0       0       0       0
  1424 ;;Total ram usage:       15 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    4
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_Sound_Play
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text4
  1435  000BDC                     __ptext4:
  1436                           	opt stack 0
  1437  000BDC                     ___fttol:
  1438                           	opt stack 25
  1439                           
  1440                           ;incstack = 0
  1441  000BDC  C03A  F03C         	movff	___fttol@f1+2,??___fttol
  1442  000BE0  6A3D               	clrf	(??___fttol+1)& (0+255),c
  1443  000BE2  6A3E               	clrf	(??___fttol+2)& (0+255),c
  1444  000BE4  3439               	rlcf	___fttol@f1+1,w,c
  1445  000BE6  363C               	rlcf	??___fttol& (0+255),f,c
  1446  000BE8  E301               	bnc	u1121
  1447  000BEA  803D               	bsf	(??___fttol+1)& (0+255),0,c
  1448  000BEC                     u1121:
  1449  000BEC  503C               	movf	??___fttol,w,c
  1450  000BEE  6E46               	movwf	___fttol@exp1,c
  1451  000BF0  5046               	movf	___fttol@exp1,w,c
  1452  000BF2  A4D8               	btfss	status,2,c
  1453  000BF4  D009               	goto	l464
  1454  000BF6  0E00               	movlw	0
  1455  000BF8  6E38               	movwf	?___fttol,c
  1456  000BFA  0E00               	movlw	0
  1457  000BFC  6E39               	movwf	?___fttol+1,c
  1458  000BFE  0E00               	movlw	0
  1459  000C00  6E3A               	movwf	?___fttol+2,c
  1460  000C02  0E00               	movlw	0
  1461  000C04  6E3B               	movwf	?___fttol+3,c
  1462  000C06  0012               	return	
  1463  000C08                     l464:
  1464  000C08  0E17               	movlw	23
  1465  000C0A  6E3C               	movwf	??___fttol& (0+255),c
  1466  000C0C  C038  F03D         	movff	___fttol@f1,??___fttol+1
  1467  000C10  C039  F03E         	movff	___fttol@f1+1,??___fttol+2
  1468  000C14  C03A  F03F         	movff	___fttol@f1+2,??___fttol+3
  1469  000C18  283C               	incf	??___fttol,w,c
  1470  000C1A  6E40               	movwf	(??___fttol+4)& (0+255),c
  1471  000C1C  D004               	goto	u1140
  1472  000C1E                     u1145:
  1473  000C1E  90D8               	bcf	status,0,c
  1474  000C20  323F               	rrcf	??___fttol+3,f,c
  1475  000C22  323E               	rrcf	??___fttol+2,f,c
  1476  000C24  323D               	rrcf	??___fttol+1,f,c
  1477  000C26                     u1140:
  1478  000C26  2E40               	decfsz	(??___fttol+4)& (0+255),f,c
  1479  000C28  D7FA               	goto	u1145
  1480  000C2A  503D               	movf	??___fttol+1,w,c
  1481  000C2C  6E41               	movwf	___fttol@sign1,c
  1482  000C2E  8E39               	bsf	___fttol@f1+1,7,c
  1483  000C30  0EFF               	movlw	255
  1484  000C32  1638               	andwf	___fttol@f1,f,c
  1485  000C34  0EFF               	movlw	255
  1486  000C36  1639               	andwf	___fttol@f1+1,f,c
  1487  000C38  0E00               	movlw	0
  1488  000C3A  163A               	andwf	___fttol@f1+2,f,c
  1489  000C3C  5038               	movf	___fttol@f1,w,c
  1490  000C3E  6E42               	movwf	___fttol@lval,c
  1491  000C40  5039               	movf	___fttol@f1+1,w,c
  1492  000C42  6E43               	movwf	___fttol@lval+1,c
  1493  000C44  503A               	movf	___fttol@f1+2,w,c
  1494  000C46  6E44               	movwf	___fttol@lval+2,c
  1495  000C48  6A45               	clrf	___fttol@lval+3,c
  1496  000C4A  0E8E               	movlw	142
  1497  000C4C  5E46               	subwf	___fttol@exp1,f,c
  1498  000C4E  AE46               	btfss	___fttol@exp1,7,c
  1499  000C50  D016               	goto	l466
  1500  000C52  5046               	movf	___fttol@exp1,w,c
  1501  000C54  0A80               	xorlw	128
  1502  000C56  0F8F               	addlw	143
  1503  000C58  B0D8               	btfsc	status,0,c
  1504  000C5A  D009               	goto	l467
  1505  000C5C  0E00               	movlw	0
  1506  000C5E  6E38               	movwf	?___fttol,c
  1507  000C60  0E00               	movlw	0
  1508  000C62  6E39               	movwf	?___fttol+1,c
  1509  000C64  0E00               	movlw	0
  1510  000C66  6E3A               	movwf	?___fttol+2,c
  1511  000C68  0E00               	movlw	0
  1512  000C6A  6E3B               	movwf	?___fttol+3,c
  1513  000C6C  0012               	return	
  1514  000C6E                     l467:
  1515  000C6E  90D8               	bcf	status,0,c
  1516  000C70  3245               	rrcf	___fttol@lval+3,f,c
  1517  000C72  3244               	rrcf	___fttol@lval+2,f,c
  1518  000C74  3243               	rrcf	___fttol@lval+1,f,c
  1519  000C76  3242               	rrcf	___fttol@lval,f,c
  1520  000C78  3E46               	incfsz	___fttol@exp1,f,c
  1521  000C7A  D7F9               	goto	l467
  1522  000C7C  D015               	goto	u1180
  1523  000C7E                     l466:
  1524  000C7E  0E17               	movlw	23
  1525  000C80  6446               	cpfsgt	___fttol@exp1,c
  1526  000C82  D00F               	goto	l472
  1527  000C84  0E00               	movlw	0
  1528  000C86  6E38               	movwf	?___fttol,c
  1529  000C88  0E00               	movlw	0
  1530  000C8A  6E39               	movwf	?___fttol+1,c
  1531  000C8C  0E00               	movlw	0
  1532  000C8E  6E3A               	movwf	?___fttol+2,c
  1533  000C90  0E00               	movlw	0
  1534  000C92  6E3B               	movwf	?___fttol+3,c
  1535  000C94  0012               	return	
  1536  000C96  90D8               	bcf	status,0,c
  1537  000C98  3642               	rlcf	___fttol@lval,f,c
  1538  000C9A  3643               	rlcf	___fttol@lval+1,f,c
  1539  000C9C  3644               	rlcf	___fttol@lval+2,f,c
  1540  000C9E  3645               	rlcf	___fttol@lval+3,f,c
  1541  000CA0  0646               	decf	___fttol@exp1,f,c
  1542  000CA2                     l472:
  1543  000CA2  5046               	movf	___fttol@exp1,w,c
  1544  000CA4  A4D8               	btfss	status,2,c
  1545  000CA6  D7F7               	goto	l473
  1546  000CA8                     u1180:
  1547  000CA8  5041               	movf	___fttol@sign1,w,c
  1548  000CAA  B4D8               	btfsc	status,2,c
  1549  000CAC  D008               	goto	l475
  1550  000CAE  1E45               	comf	___fttol@lval+3,f,c
  1551  000CB0  1E44               	comf	___fttol@lval+2,f,c
  1552  000CB2  1E43               	comf	___fttol@lval+1,f,c
  1553  000CB4  6C42               	negf	___fttol@lval,c
  1554  000CB6  0E00               	movlw	0
  1555  000CB8  2243               	addwfc	___fttol@lval+1,f,c
  1556  000CBA  2244               	addwfc	___fttol@lval+2,f,c
  1557  000CBC  2245               	addwfc	___fttol@lval+3,f,c
  1558  000CBE                     l475:
  1559  000CBE  C042  F038         	movff	___fttol@lval,?___fttol
  1560  000CC2  C043  F039         	movff	___fttol@lval+1,?___fttol+1
  1561  000CC6  C044  F03A         	movff	___fttol@lval+2,?___fttol+2
  1562  000CCA  C045  F03B         	movff	___fttol@lval+3,?___fttol+3
  1563  000CCE  0012               	return	
  1564  000CD0                     __end_of___fttol:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           intcon	equ	0xFF2
  1573                           postinc0	equ	0xFEE
  1574                           wreg	equ	0xFE8
  1575                           postdec1	equ	0xFE5
  1576                           fsr1l	equ	0xFE1
  1577                           indf2	equ	0xFDF
  1578                           postinc2	equ	0xFDE
  1579                           postdec2	equ	0xFDD
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8
  1583                           
  1584 ;; *************** function ___ftneg *****************
  1585 ;; Defined at:
  1586 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftneg.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  f1              3   40[COMRAM] float 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;		None
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  3   40[COMRAM] float 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1600 ;;      Params:         3       0       0       0       0       0       0
  1601 ;;      Locals:         0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0
  1603 ;;      Totals:         3       0       0       0       0       0       0
  1604 ;;Total ram usage:        3 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    4
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_Sound_Play
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text5
  1615  00118C                     __ptext5:
  1616                           	opt stack 0
  1617  00118C                     ___ftneg:
  1618                           	opt stack 25
  1619                           
  1620                           ;incstack = 0
  1621  00118C  5029               	movf	___ftneg@f1,w,c
  1622  00118E  102A               	iorwf	___ftneg@f1+1,w,c
  1623  001190  102B               	iorwf	___ftneg@f1+2,w,c
  1624  001192  B4D8               	btfsc	status,2,c
  1625  001194  D006               	goto	l454
  1626  001196  0E00               	movlw	0
  1627  001198  1A29               	xorwf	___ftneg@f1,f,c
  1628  00119A  0E00               	movlw	0
  1629  00119C  1A2A               	xorwf	___ftneg@f1+1,f,c
  1630  00119E  0E80               	movlw	128
  1631  0011A0  1A2B               	xorwf	___ftneg@f1+2,f,c
  1632  0011A2                     l454:
  1633  0011A2  C029  F029         	movff	___ftneg@f1,?___ftneg
  1634  0011A6  C02A  F02A         	movff	___ftneg@f1+1,?___ftneg+1
  1635  0011AA  C02B  F02B         	movff	___ftneg@f1+2,?___ftneg+2
  1636  0011AE  0012               	return		;funcret
  1637  0011B0                     __end_of___ftneg:
  1638                           	opt stack 0
  1639                           tblptru	equ	0xFF8
  1640                           tblptrh	equ	0xFF7
  1641                           tblptrl	equ	0xFF6
  1642                           tablat	equ	0xFF5
  1643                           prodh	equ	0xFF4
  1644                           prodl	equ	0xFF3
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           indf2	equ	0xFDF
  1651                           postinc2	equ	0xFDE
  1652                           postdec2	equ	0xFDD
  1653                           fsr2h	equ	0xFDA
  1654                           fsr2l	equ	0xFD9
  1655                           status	equ	0xFD8
  1656                           
  1657 ;; *************** function ___ftdiv *****************
  1658 ;; Defined at:
  1659 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftdiv.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  f1              3   39[COMRAM] float 
  1662 ;;  f2              3   42[COMRAM] float 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  f3              3   49[COMRAM] float 
  1665 ;;  sign            1   53[COMRAM] unsigned char 
  1666 ;;  exp             1   52[COMRAM] unsigned char 
  1667 ;;  cntr            1   48[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  3   39[COMRAM] float 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1677 ;;      Params:         6       0       0       0       0       0       0
  1678 ;;      Locals:         6       0       0       0       0       0       0
  1679 ;;      Temps:          3       0       0       0       0       0       0
  1680 ;;      Totals:        15       0       0       0       0       0       0
  1681 ;;Total ram usage:       15 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    5
  1684 ;; This function calls:
  1685 ;;		___ftpack
  1686 ;; This function is called by:
  1687 ;;		_Sound_Play
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text6
  1692  000CD0                     __ptext6:
  1693                           	opt stack 0
  1694  000CD0                     ___ftdiv:
  1695                           	opt stack 24
  1696                           
  1697                           ;incstack = 0
  1698  000CD0  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  1699  000CD4  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1700  000CD6  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1701  000CD8  3429               	rlcf	___ftdiv@f1+1,w,c
  1702  000CDA  362E               	rlcf	??___ftdiv& (0+255),f,c
  1703  000CDC  E301               	bnc	u1051
  1704  000CDE  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1705  000CE0                     u1051:
  1706  000CE0  502E               	movf	??___ftdiv,w,c
  1707  000CE2  6E35               	movwf	___ftdiv@exp,c
  1708  000CE4  5035               	movf	___ftdiv@exp,w,c
  1709  000CE6  A4D8               	btfss	status,2,c
  1710  000CE8  D007               	goto	l428
  1711  000CEA  0E00               	movlw	0
  1712  000CEC  6E28               	movwf	?___ftdiv,c
  1713  000CEE  0E00               	movlw	0
  1714  000CF0  6E29               	movwf	?___ftdiv+1,c
  1715  000CF2  0E00               	movlw	0
  1716  000CF4  6E2A               	movwf	?___ftdiv+2,c
  1717  000CF6  0012               	return	
  1718  000CF8                     l428:
  1719  000CF8  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  1720  000CFC  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1721  000CFE  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1722  000D00  342C               	rlcf	___ftdiv@f2+1,w,c
  1723  000D02  362E               	rlcf	??___ftdiv& (0+255),f,c
  1724  000D04  E301               	bnc	u1071
  1725  000D06  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1726  000D08                     u1071:
  1727  000D08  502E               	movf	??___ftdiv,w,c
  1728  000D0A  6E36               	movwf	___ftdiv@sign,c
  1729  000D0C  5036               	movf	___ftdiv@sign,w,c
  1730  000D0E  A4D8               	btfss	status,2,c
  1731  000D10  D007               	goto	l430
  1732  000D12  0E00               	movlw	0
  1733  000D14  6E28               	movwf	?___ftdiv,c
  1734  000D16  0E00               	movlw	0
  1735  000D18  6E29               	movwf	?___ftdiv+1,c
  1736  000D1A  0E00               	movlw	0
  1737  000D1C  6E2A               	movwf	?___ftdiv+2,c
  1738  000D1E  0012               	return	
  1739  000D20                     l430:
  1740  000D20  0E00               	movlw	0
  1741  000D22  6E32               	movwf	___ftdiv@f3,c
  1742  000D24  0E00               	movlw	0
  1743  000D26  6E33               	movwf	___ftdiv@f3+1,c
  1744  000D28  0E00               	movlw	0
  1745  000D2A  6E34               	movwf	___ftdiv@f3+2,c
  1746  000D2C  5036               	movf	___ftdiv@sign,w,c
  1747  000D2E  0F89               	addlw	137
  1748  000D30  5E35               	subwf	___ftdiv@exp,f,c
  1749  000D32  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  1750  000D36  502D               	movf	___ftdiv@f2+2,w,c
  1751  000D38  1A36               	xorwf	___ftdiv@sign,f,c
  1752  000D3A  0E80               	movlw	128
  1753  000D3C  1636               	andwf	___ftdiv@sign,f,c
  1754  000D3E  8E29               	bsf	___ftdiv@f1+1,7,c
  1755  000D40  0EFF               	movlw	255
  1756  000D42  1628               	andwf	___ftdiv@f1,f,c
  1757  000D44  0EFF               	movlw	255
  1758  000D46  1629               	andwf	___ftdiv@f1+1,f,c
  1759  000D48  0E00               	movlw	0
  1760  000D4A  162A               	andwf	___ftdiv@f1+2,f,c
  1761  000D4C  8E2C               	bsf	___ftdiv@f2+1,7,c
  1762  000D4E  0EFF               	movlw	255
  1763  000D50  162B               	andwf	___ftdiv@f2,f,c
  1764  000D52  0EFF               	movlw	255
  1765  000D54  162C               	andwf	___ftdiv@f2+1,f,c
  1766  000D56  0E00               	movlw	0
  1767  000D58  162D               	andwf	___ftdiv@f2+2,f,c
  1768  000D5A  0E18               	movlw	24
  1769  000D5C  6E31               	movwf	___ftdiv@cntr,c
  1770  000D5E  90D8               	bcf	status,0,c
  1771  000D60  3632               	rlcf	___ftdiv@f3,f,c
  1772  000D62  3633               	rlcf	___ftdiv@f3+1,f,c
  1773  000D64  3634               	rlcf	___ftdiv@f3+2,f,c
  1774  000D66  502B               	movf	___ftdiv@f2,w,c
  1775  000D68  5C28               	subwf	___ftdiv@f1,w,c
  1776  000D6A  502C               	movf	___ftdiv@f2+1,w,c
  1777  000D6C  5829               	subwfb	___ftdiv@f1+1,w,c
  1778  000D6E  502D               	movf	___ftdiv@f2+2,w,c
  1779  000D70  582A               	subwfb	___ftdiv@f1+2,w,c
  1780  000D72  A0D8               	btfss	status,0,c
  1781  000D74  D007               	goto	l432
  1782  000D76  502B               	movf	___ftdiv@f2,w,c
  1783  000D78  5E28               	subwf	___ftdiv@f1,f,c
  1784  000D7A  502C               	movf	___ftdiv@f2+1,w,c
  1785  000D7C  5A29               	subwfb	___ftdiv@f1+1,f,c
  1786  000D7E  502D               	movf	___ftdiv@f2+2,w,c
  1787  000D80  5A2A               	subwfb	___ftdiv@f1+2,f,c
  1788  000D82  8032               	bsf	___ftdiv@f3,0,c
  1789  000D84                     l432:
  1790  000D84  90D8               	bcf	status,0,c
  1791  000D86  3628               	rlcf	___ftdiv@f1,f,c
  1792  000D88  3629               	rlcf	___ftdiv@f1+1,f,c
  1793  000D8A  362A               	rlcf	___ftdiv@f1+2,f,c
  1794  000D8C  2E31               	decfsz	___ftdiv@cntr,f,c
  1795  000D8E  D7E7               	goto	l431
  1796  000D90  C032  F01D         	movff	___ftdiv@f3,___ftpack@arg
  1797  000D94  C033  F01E         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1798  000D98  C034  F01F         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1799  000D9C  C035  F020         	movff	___ftdiv@exp,___ftpack@exp
  1800  000DA0  C036  F021         	movff	___ftdiv@sign,___ftpack@sign
  1801  000DA4  EC4D  F007         	call	___ftpack	;wreg free
  1802  000DA8  C01D  F028         	movff	?___ftpack,?___ftdiv
  1803  000DAC  C01E  F029         	movff	?___ftpack+1,?___ftdiv+1
  1804  000DB0  C01F  F02A         	movff	?___ftpack+2,?___ftdiv+2
  1805  000DB4  0012               	return	
  1806  000DB6                     __end_of___ftdiv:
  1807                           	opt stack 0
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           prodh	equ	0xFF4
  1813                           prodl	equ	0xFF3
  1814                           intcon	equ	0xFF2
  1815                           postinc0	equ	0xFEE
  1816                           wreg	equ	0xFE8
  1817                           postdec1	equ	0xFE5
  1818                           fsr1l	equ	0xFE1
  1819                           indf2	equ	0xFDF
  1820                           postinc2	equ	0xFDE
  1821                           postdec2	equ	0xFDD
  1822                           fsr2h	equ	0xFDA
  1823                           fsr2l	equ	0xFD9
  1824                           status	equ	0xFD8
  1825                           
  1826 ;; *************** function ___ftadd *****************
  1827 ;; Defined at:
  1828 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\ftadd.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  f1              3   43[COMRAM] float 
  1831 ;;  f2              3   46[COMRAM] float 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  exp1            1   54[COMRAM] unsigned char 
  1834 ;;  exp2            1   53[COMRAM] unsigned char 
  1835 ;;  sign            1   52[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  3   43[COMRAM] float 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1845 ;;      Params:         6       0       0       0       0       0       0
  1846 ;;      Locals:         3       0       0       0       0       0       0
  1847 ;;      Temps:          3       0       0       0       0       0       0
  1848 ;;      Totals:        12       0       0       0       0       0       0
  1849 ;;Total ram usage:       12 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    5
  1852 ;; This function calls:
  1853 ;;		___ftpack
  1854 ;; This function is called by:
  1855 ;;		_Sound_Play
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text7
  1860  0007CE                     __ptext7:
  1861                           	opt stack 0
  1862  0007CE                     ___ftadd:
  1863                           	opt stack 24
  1864                           
  1865                           ;incstack = 0
  1866  0007CE  C02E  F032         	movff	___ftadd@f1+2,??___ftadd
  1867  0007D2  6A33               	clrf	(??___ftadd+1)& (0+255),c
  1868  0007D4  6A34               	clrf	(??___ftadd+2)& (0+255),c
  1869  0007D6  342D               	rlcf	___ftadd@f1+1,w,c
  1870  0007D8  3632               	rlcf	??___ftadd& (0+255),f,c
  1871  0007DA  E301               	bnc	u841
  1872  0007DC  8033               	bsf	(??___ftadd+1)& (0+255),0,c
  1873  0007DE                     u841:
  1874  0007DE  5032               	movf	??___ftadd,w,c
  1875  0007E0  6E37               	movwf	___ftadd@exp1,c
  1876  0007E2  C031  F032         	movff	___ftadd@f2+2,??___ftadd
  1877  0007E6  6A33               	clrf	(??___ftadd+1)& (0+255),c
  1878  0007E8  6A34               	clrf	(??___ftadd+2)& (0+255),c
  1879  0007EA  3430               	rlcf	___ftadd@f2+1,w,c
  1880  0007EC  3632               	rlcf	??___ftadd& (0+255),f,c
  1881  0007EE  E301               	bnc	u851
  1882  0007F0  8033               	bsf	(??___ftadd+1)& (0+255),0,c
  1883  0007F2                     u851:
  1884  0007F2  5032               	movf	??___ftadd,w,c
  1885  0007F4  6E36               	movwf	___ftadd@exp2,c
  1886  0007F6  5037               	movf	___ftadd@exp1,w,c
  1887  0007F8  B4D8               	btfsc	status,2,c
  1888  0007FA  D00B               	goto	u880
  1889  0007FC  5036               	movf	___ftadd@exp2,w,c
  1890  0007FE  5C37               	subwf	___ftadd@exp1,w,c
  1891  000800  B0D8               	btfsc	status,0,c
  1892  000802  D00E               	goto	l395
  1893  000804  5037               	movf	___ftadd@exp1,w,c
  1894  000806  0800               	sublw	0
  1895  000808  2436               	addwf	___ftadd@exp2,w,c
  1896  00080A  6E32               	movwf	??___ftadd& (0+255),c
  1897  00080C  0E18               	movlw	24
  1898  00080E  6432               	cpfsgt	??___ftadd,c
  1899  000810  D007               	goto	l395
  1900  000812                     u880:
  1901  000812  C02F  F02C         	movff	___ftadd@f2,?___ftadd
  1902  000816  C030  F02D         	movff	___ftadd@f2+1,?___ftadd+1
  1903  00081A  C031  F02E         	movff	___ftadd@f2+2,?___ftadd+2
  1904  00081E  0012               	return	
  1905  000820                     l395:
  1906  000820  5036               	movf	___ftadd@exp2,w,c
  1907  000822  B4D8               	btfsc	status,2,c
  1908  000824  D00B               	goto	u910
  1909  000826  5037               	movf	___ftadd@exp1,w,c
  1910  000828  5C36               	subwf	___ftadd@exp2,w,c
  1911  00082A  B0D8               	btfsc	status,0,c
  1912  00082C  D00E               	goto	l399
  1913  00082E  5036               	movf	___ftadd@exp2,w,c
  1914  000830  0800               	sublw	0
  1915  000832  2437               	addwf	___ftadd@exp1,w,c
  1916  000834  6E32               	movwf	??___ftadd& (0+255),c
  1917  000836  0E18               	movlw	24
  1918  000838  6432               	cpfsgt	??___ftadd,c
  1919  00083A  D007               	goto	l399
  1920  00083C                     u910:
  1921  00083C  C02C  F02C         	movff	___ftadd@f1,?___ftadd
  1922  000840  C02D  F02D         	movff	___ftadd@f1+1,?___ftadd+1
  1923  000844  C02E  F02E         	movff	___ftadd@f1+2,?___ftadd+2
  1924  000848  0012               	return	
  1925  00084A                     l399:
  1926  00084A  0E06               	movlw	6
  1927  00084C  6E35               	movwf	___ftadd@sign,c
  1928  00084E  BE2E               	btfsc	___ftadd@f1+2,7,c
  1929  000850  8E35               	bsf	___ftadd@sign,7,c
  1930  000852  BE31               	btfsc	___ftadd@f2+2,7,c
  1931  000854  8C35               	bsf	___ftadd@sign,6,c
  1932  000856  8E2D               	bsf	___ftadd@f1+1,7,c
  1933  000858  0EFF               	movlw	255
  1934  00085A  162C               	andwf	___ftadd@f1,f,c
  1935  00085C  0EFF               	movlw	255
  1936  00085E  162D               	andwf	___ftadd@f1+1,f,c
  1937  000860  0E00               	movlw	0
  1938  000862  162E               	andwf	___ftadd@f1+2,f,c
  1939  000864  8E30               	bsf	___ftadd@f2+1,7,c
  1940  000866  0EFF               	movlw	255
  1941  000868  162F               	andwf	___ftadd@f2,f,c
  1942  00086A  0EFF               	movlw	255
  1943  00086C  1630               	andwf	___ftadd@f2+1,f,c
  1944  00086E  0E00               	movlw	0
  1945  000870  1631               	andwf	___ftadd@f2+2,f,c
  1946  000872  5036               	movf	___ftadd@exp2,w,c
  1947  000874  5C37               	subwf	___ftadd@exp1,w,c
  1948  000876  B0D8               	btfsc	status,0,c
  1949  000878  D01B               	goto	l404
  1950  00087A                     u940:
  1951  00087A  90D8               	bcf	status,0,c
  1952  00087C  362F               	rlcf	___ftadd@f2,f,c
  1953  00087E  3630               	rlcf	___ftadd@f2+1,f,c
  1954  000880  3631               	rlcf	___ftadd@f2+2,f,c
  1955  000882  0636               	decf	___ftadd@exp2,f,c
  1956  000884  5037               	movf	___ftadd@exp1,w,c
  1957  000886  1836               	xorwf	___ftadd@exp2,w,c
  1958  000888  B4D8               	btfsc	status,2,c
  1959  00088A  D00D               	goto	l409
  1960  00088C  0635               	decf	___ftadd@sign,f,c
  1961  00088E  C035  F032         	movff	___ftadd@sign,??___ftadd
  1962  000892  0E07               	movlw	7
  1963  000894  1632               	andwf	??___ftadd,f,c
  1964  000896  B4D8               	btfsc	status,2,c
  1965  000898  D006               	goto	l409
  1966  00089A  D7EF               	goto	u940
  1967  00089C  90D8               	bcf	status,0,c
  1968  00089E  322E               	rrcf	___ftadd@f1+2,f,c
  1969  0008A0  322D               	rrcf	___ftadd@f1+1,f,c
  1970  0008A2  322C               	rrcf	___ftadd@f1,f,c
  1971  0008A4  2A37               	incf	___ftadd@exp1,f,c
  1972  0008A6                     l409:
  1973  0008A6  5036               	movf	___ftadd@exp2,w,c
  1974  0008A8  1837               	xorwf	___ftadd@exp1,w,c
  1975  0008AA  B4D8               	btfsc	status,2,c
  1976  0008AC  D01F               	goto	u1010
  1977  0008AE  D7F6               	goto	l410
  1978  0008B0                     l404:
  1979  0008B0  5037               	movf	___ftadd@exp1,w,c
  1980  0008B2  5C36               	subwf	___ftadd@exp2,w,c
  1981  0008B4  B0D8               	btfsc	status,0,c
  1982  0008B6  D01A               	goto	u1010
  1983  0008B8                     u980:
  1984  0008B8  90D8               	bcf	status,0,c
  1985  0008BA  362C               	rlcf	___ftadd@f1,f,c
  1986  0008BC  362D               	rlcf	___ftadd@f1+1,f,c
  1987  0008BE  362E               	rlcf	___ftadd@f1+2,f,c
  1988  0008C0  0637               	decf	___ftadd@exp1,f,c
  1989  0008C2  5037               	movf	___ftadd@exp1,w,c
  1990  0008C4  1836               	xorwf	___ftadd@exp2,w,c
  1991  0008C6  B4D8               	btfsc	status,2,c
  1992  0008C8  D00D               	goto	l418
  1993  0008CA  0635               	decf	___ftadd@sign,f,c
  1994  0008CC  C035  F032         	movff	___ftadd@sign,??___ftadd
  1995  0008D0  0E07               	movlw	7
  1996  0008D2  1632               	andwf	??___ftadd,f,c
  1997  0008D4  B4D8               	btfsc	status,2,c
  1998  0008D6  D006               	goto	l418
  1999  0008D8  D7EF               	goto	u980
  2000  0008DA  90D8               	bcf	status,0,c
  2001  0008DC  3231               	rrcf	___ftadd@f2+2,f,c
  2002  0008DE  3230               	rrcf	___ftadd@f2+1,f,c
  2003  0008E0  322F               	rrcf	___ftadd@f2,f,c
  2004  0008E2  2A36               	incf	___ftadd@exp2,f,c
  2005  0008E4                     l418:
  2006  0008E4  5036               	movf	___ftadd@exp2,w,c
  2007  0008E6  1837               	xorwf	___ftadd@exp1,w,c
  2008  0008E8  A4D8               	btfss	status,2,c
  2009  0008EA  D7F7               	goto	l419
  2010  0008EC                     u1010:
  2011  0008EC  AE35               	btfss	___ftadd@sign,7,c
  2012  0008EE  D00C               	goto	l421
  2013  0008F0  0EFF               	movlw	255
  2014  0008F2  1A2C               	xorwf	___ftadd@f1,f,c
  2015  0008F4  0EFF               	movlw	255
  2016  0008F6  1A2D               	xorwf	___ftadd@f1+1,f,c
  2017  0008F8  0EFF               	movlw	255
  2018  0008FA  1A2E               	xorwf	___ftadd@f1+2,f,c
  2019  0008FC  0E01               	movlw	1
  2020  0008FE  262C               	addwf	___ftadd@f1,f,c
  2021  000900  0E00               	movlw	0
  2022  000902  222D               	addwfc	___ftadd@f1+1,f,c
  2023  000904  0E00               	movlw	0
  2024  000906  222E               	addwfc	___ftadd@f1+2,f,c
  2025  000908                     l421:
  2026  000908  AC35               	btfss	___ftadd@sign,6,c
  2027  00090A  D00C               	goto	l422
  2028  00090C  0EFF               	movlw	255
  2029  00090E  1A2F               	xorwf	___ftadd@f2,f,c
  2030  000910  0EFF               	movlw	255
  2031  000912  1A30               	xorwf	___ftadd@f2+1,f,c
  2032  000914  0EFF               	movlw	255
  2033  000916  1A31               	xorwf	___ftadd@f2+2,f,c
  2034  000918  0E01               	movlw	1
  2035  00091A  262F               	addwf	___ftadd@f2,f,c
  2036  00091C  0E00               	movlw	0
  2037  00091E  2230               	addwfc	___ftadd@f2+1,f,c
  2038  000920  0E00               	movlw	0
  2039  000922  2231               	addwfc	___ftadd@f2+2,f,c
  2040  000924                     l422:
  2041  000924  0E00               	movlw	0
  2042  000926  6E35               	movwf	___ftadd@sign,c
  2043  000928  502C               	movf	___ftadd@f1,w,c
  2044  00092A  262F               	addwf	___ftadd@f2,f,c
  2045  00092C  502D               	movf	___ftadd@f1+1,w,c
  2046  00092E  2230               	addwfc	___ftadd@f2+1,f,c
  2047  000930  502E               	movf	___ftadd@f1+2,w,c
  2048  000932  2231               	addwfc	___ftadd@f2+2,f,c
  2049  000934  AE31               	btfss	___ftadd@f2+2,7,c
  2050  000936  D00E               	goto	l423
  2051  000938  0EFF               	movlw	255
  2052  00093A  1A2F               	xorwf	___ftadd@f2,f,c
  2053  00093C  0EFF               	movlw	255
  2054  00093E  1A30               	xorwf	___ftadd@f2+1,f,c
  2055  000940  0EFF               	movlw	255
  2056  000942  1A31               	xorwf	___ftadd@f2+2,f,c
  2057  000944  0E01               	movlw	1
  2058  000946  262F               	addwf	___ftadd@f2,f,c
  2059  000948  0E00               	movlw	0
  2060  00094A  2230               	addwfc	___ftadd@f2+1,f,c
  2061  00094C  0E00               	movlw	0
  2062  00094E  2231               	addwfc	___ftadd@f2+2,f,c
  2063  000950  0E01               	movlw	1
  2064  000952  6E35               	movwf	___ftadd@sign,c
  2065  000954                     l423:
  2066  000954  C02F  F01D         	movff	___ftadd@f2,___ftpack@arg
  2067  000958  C030  F01E         	movff	___ftadd@f2+1,___ftpack@arg+1
  2068  00095C  C031  F01F         	movff	___ftadd@f2+2,___ftpack@arg+2
  2069  000960  C037  F020         	movff	___ftadd@exp1,___ftpack@exp
  2070  000964  C035  F021         	movff	___ftadd@sign,___ftpack@sign
  2071  000968  EC4D  F007         	call	___ftpack	;wreg free
  2072  00096C  C01D  F02C         	movff	?___ftpack,?___ftadd
  2073  000970  C01E  F02D         	movff	?___ftpack+1,?___ftadd+1
  2074  000974  C01F  F02E         	movff	?___ftpack+2,?___ftadd+2
  2075  000978  0012               	return	
  2076  00097A                     __end_of___ftadd:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           prodh	equ	0xFF4
  2083                           prodl	equ	0xFF3
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           postdec1	equ	0xFE5
  2088                           fsr1l	equ	0xFE1
  2089                           indf2	equ	0xFDF
  2090                           postinc2	equ	0xFDE
  2091                           postdec2	equ	0xFDD
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function ___awtoft *****************
  2097 ;; Defined at:
  2098 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awtoft.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  c               2   36[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  sign            1   39[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  3   36[COMRAM] float 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         3       0       0       0       0       0       0
  2113 ;;      Locals:         1       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         4       0       0       0       0       0       0
  2116 ;;Total ram usage:        4 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    5
  2119 ;; This function calls:
  2120 ;;		___ftpack
  2121 ;; This function is called by:
  2122 ;;		_Sound_Play
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text8
  2127  0010AC                     __ptext8:
  2128                           	opt stack 0
  2129  0010AC                     ___awtoft:
  2130                           	opt stack 24
  2131                           
  2132                           ;incstack = 0
  2133  0010AC  0E00               	movlw	0
  2134  0010AE  6E28               	movwf	___awtoft@sign,c
  2135  0010B0  AE26               	btfss	___awtoft@c+1,7,c
  2136  0010B2  D006               	goto	l345
  2137  0010B4  6C25               	negf	___awtoft@c,c
  2138  0010B6  1E26               	comf	___awtoft@c+1,f,c
  2139  0010B8  B0D8               	btfsc	status,0,c
  2140  0010BA  2A26               	incf	___awtoft@c+1,f,c
  2141  0010BC  0E01               	movlw	1
  2142  0010BE  6E28               	movwf	___awtoft@sign,c
  2143  0010C0                     l345:
  2144  0010C0  C025  F01D         	movff	___awtoft@c,___ftpack@arg
  2145  0010C4  C026  F01E         	movff	___awtoft@c+1,___ftpack@arg+1
  2146  0010C8  6A1F               	clrf	___ftpack@arg+2,c
  2147  0010CA  0E8E               	movlw	142
  2148  0010CC  6E20               	movwf	___ftpack@exp,c
  2149  0010CE  C028  F021         	movff	___awtoft@sign,___ftpack@sign
  2150  0010D2  EC4D  F007         	call	___ftpack	;wreg free
  2151  0010D6  C01D  F025         	movff	?___ftpack,?___awtoft
  2152  0010DA  C01E  F026         	movff	?___ftpack+1,?___awtoft+1
  2153  0010DE  C01F  F027         	movff	?___ftpack+2,?___awtoft+2
  2154  0010E2  0012               	return	
  2155  0010E4                     __end_of___awtoft:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           postinc2	equ	0xFDE
  2170                           postdec2	equ	0xFDD
  2171                           fsr2h	equ	0xFDA
  2172                           fsr2l	equ	0xFD9
  2173                           status	equ	0xFD8
  2174                           
  2175 ;; *************** function ___ftpack *****************
  2176 ;; Defined at:
  2177 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\float.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  arg             3   28[COMRAM] unsigned um
  2180 ;;  exp             1   31[COMRAM] unsigned char 
  2181 ;;  sign            1   32[COMRAM] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  3   28[COMRAM] float 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         5       0       0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0       0       0
  2195 ;;      Temps:          3       0       0       0       0       0       0
  2196 ;;      Totals:         8       0       0       0       0       0       0
  2197 ;;Total ram usage:        8 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    4
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		___awtoft
  2204 ;;		___ftadd
  2205 ;;		___ftdiv
  2206 ;;		___lwtoft
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text9
  2211  000E9A                     __ptext9:
  2212                           	opt stack 0
  2213  000E9A                     ___ftpack:
  2214                           	opt stack 24
  2215                           
  2216                           ;incstack = 0
  2217  000E9A  5020               	movf	___ftpack@exp,w,c
  2218  000E9C  B4D8               	btfsc	status,2,c
  2219  000E9E  D005               	goto	u750
  2220  000EA0  501D               	movf	___ftpack@arg,w,c
  2221  000EA2  101E               	iorwf	___ftpack@arg+1,w,c
  2222  000EA4  101F               	iorwf	___ftpack@arg+2,w,c
  2223  000EA6  A4D8               	btfss	status,2,c
  2224  000EA8  D00C               	goto	l364
  2225  000EAA                     u750:
  2226  000EAA  0E00               	movlw	0
  2227  000EAC  6E1D               	movwf	?___ftpack,c
  2228  000EAE  0E00               	movlw	0
  2229  000EB0  6E1E               	movwf	?___ftpack+1,c
  2230  000EB2  0E00               	movlw	0
  2231  000EB4  6E1F               	movwf	?___ftpack+2,c
  2232  000EB6  0012               	return	
  2233  000EB8  2A20               	incf	___ftpack@exp,f,c
  2234  000EBA  90D8               	bcf	status,0,c
  2235  000EBC  321F               	rrcf	___ftpack@arg+2,f,c
  2236  000EBE  321E               	rrcf	___ftpack@arg+1,f,c
  2237  000EC0  321D               	rrcf	___ftpack@arg,f,c
  2238  000EC2                     l364:
  2239  000EC2  0E00               	movlw	0
  2240  000EC4  141D               	andwf	___ftpack@arg,w,c
  2241  000EC6  6E22               	movwf	??___ftpack& (0+255),c
  2242  000EC8  0E00               	movlw	0
  2243  000ECA  141E               	andwf	___ftpack@arg+1,w,c
  2244  000ECC  6E23               	movwf	(??___ftpack+1)& (0+255),c
  2245  000ECE  0EFE               	movlw	254
  2246  000ED0  141F               	andwf	___ftpack@arg+2,w,c
  2247  000ED2  6E24               	movwf	(??___ftpack+2)& (0+255),c
  2248  000ED4  5022               	movf	??___ftpack,w,c
  2249  000ED6  1023               	iorwf	??___ftpack+1,w,c
  2250  000ED8  1024               	iorwf	??___ftpack+2,w,c
  2251  000EDA  B4D8               	btfsc	status,2,c
  2252  000EDC  D00C               	goto	l367
  2253  000EDE  D7EC               	goto	l365
  2254  000EE0  2A20               	incf	___ftpack@exp,f,c
  2255  000EE2  0E01               	movlw	1
  2256  000EE4  261D               	addwf	___ftpack@arg,f,c
  2257  000EE6  0E00               	movlw	0
  2258  000EE8  221E               	addwfc	___ftpack@arg+1,f,c
  2259  000EEA  0E00               	movlw	0
  2260  000EEC  221F               	addwfc	___ftpack@arg+2,f,c
  2261  000EEE  90D8               	bcf	status,0,c
  2262  000EF0  321F               	rrcf	___ftpack@arg+2,f,c
  2263  000EF2  321E               	rrcf	___ftpack@arg+1,f,c
  2264  000EF4  321D               	rrcf	___ftpack@arg,f,c
  2265  000EF6                     l367:
  2266  000EF6  0E00               	movlw	0
  2267  000EF8  141D               	andwf	___ftpack@arg,w,c
  2268  000EFA  6E22               	movwf	??___ftpack& (0+255),c
  2269  000EFC  0E00               	movlw	0
  2270  000EFE  141E               	andwf	___ftpack@arg+1,w,c
  2271  000F00  6E23               	movwf	(??___ftpack+1)& (0+255),c
  2272  000F02  0EFF               	movlw	255
  2273  000F04  141F               	andwf	___ftpack@arg+2,w,c
  2274  000F06  6E24               	movwf	(??___ftpack+2)& (0+255),c
  2275  000F08  5022               	movf	??___ftpack,w,c
  2276  000F0A  1023               	iorwf	??___ftpack+1,w,c
  2277  000F0C  1024               	iorwf	??___ftpack+2,w,c
  2278  000F0E  B4D8               	btfsc	status,2,c
  2279  000F10  D006               	goto	l370
  2280  000F12  D7E6               	goto	l368
  2281  000F14  0620               	decf	___ftpack@exp,f,c
  2282  000F16  90D8               	bcf	status,0,c
  2283  000F18  361D               	rlcf	___ftpack@arg,f,c
  2284  000F1A  361E               	rlcf	___ftpack@arg+1,f,c
  2285  000F1C  361F               	rlcf	___ftpack@arg+2,f,c
  2286  000F1E                     l370:
  2287  000F1E  BE1E               	btfsc	___ftpack@arg+1,7,c
  2288  000F20  D003               	goto	u790
  2289  000F22  0E02               	movlw	2
  2290  000F24  6020               	cpfslt	___ftpack@exp,c
  2291  000F26  D7F6               	goto	l371
  2292  000F28                     u790:
  2293  000F28  A020               	btfss	___ftpack@exp,0,c
  2294  000F2A  9E1E               	bcf	___ftpack@arg+1,7,c
  2295  000F2C  90D8               	bcf	status,0,c
  2296  000F2E  3220               	rrcf	___ftpack@exp,f,c
  2297  000F30  5020               	movf	___ftpack@exp,w,c
  2298  000F32  121F               	iorwf	___ftpack@arg+2,f,c
  2299  000F34  5021               	movf	___ftpack@sign,w,c
  2300  000F36  A4D8               	btfss	status,2,c
  2301  000F38  8E1F               	bsf	___ftpack@arg+2,7,c
  2302  000F3A  C01D  F01D         	movff	___ftpack@arg,?___ftpack
  2303  000F3E  C01E  F01E         	movff	___ftpack@arg+1,?___ftpack+1
  2304  000F42  C01F  F01F         	movff	___ftpack@arg+2,?___ftpack+2
  2305  000F46  0012               	return	
  2306  000F48                     __end_of___ftpack:
  2307                           	opt stack 0
  2308                           tblptru	equ	0xFF8
  2309                           tblptrh	equ	0xFF7
  2310                           tblptrl	equ	0xFF6
  2311                           tablat	equ	0xFF5
  2312                           prodh	equ	0xFF4
  2313                           prodl	equ	0xFF3
  2314                           intcon	equ	0xFF2
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postdec1	equ	0xFE5
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           postinc2	equ	0xFDE
  2321                           postdec2	equ	0xFDD
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function _Delay_Ms *****************
  2327 ;; Defined at:
  2328 ;;		line 85 in file "newmain.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  s               2   28[COMRAM] unsigned int 
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  j               2   31[COMRAM] unsigned int 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2342 ;;      Params:         2       0       0       0       0       0       0
  2343 ;;      Locals:         2       0       0       0       0       0       0
  2344 ;;      Temps:          1       0       0       0       0       0       0
  2345 ;;      Totals:         5       0       0       0       0       0       0
  2346 ;;Total ram usage:        5 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_Sound_Play
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text10
  2358  001118                     __ptext10:
  2359                           	opt stack 0
  2360  001118                     _Delay_Ms:
  2361                           	opt stack 25
  2362                           
  2363                           ;newmain.c: 87: unsigned int j;
  2364                           ;newmain.c: 88: for(j = 0; j < s; j++)_delay((unsigned long)((1)*(8000000/4000.0)));
  2365                           
  2366                           ;incstack = 0
  2367  001118  0E00               	movlw	0
  2368  00111A  6E21               	movwf	Delay_Ms@j+1,c
  2369  00111C  0E00               	movlw	0
  2370  00111E  6E20               	movwf	Delay_Ms@j,c
  2371  001120  D009               	goto	l77
  2372  001122  0E03               	movlw	3
  2373  001124  6E1F               	movwf	??_Delay_Ms& (0+255),c
  2374  001126  0E98               	movlw	152
  2375  001128                     u1457:
  2376  001128  2EE8               	decfsz	wreg,f,c
  2377  00112A  D7FE               	bra	u1457
  2378  00112C  2E1F               	decfsz	??_Delay_Ms& (0+255),f,c
  2379  00112E  D7FC               	bra	u1457
  2380  001130  4A20               	infsnz	Delay_Ms@j,f,c
  2381  001132  2A21               	incf	Delay_Ms@j+1,f,c
  2382  001134                     l77:
  2383  001134  501D               	movf	Delay_Ms@s,w,c
  2384  001136  5C20               	subwf	Delay_Ms@j,w,c
  2385  001138  501E               	movf	Delay_Ms@s+1,w,c
  2386  00113A  5821               	subwfb	Delay_Ms@j+1,w,c
  2387  00113C  B0D8               	btfsc	status,0,c
  2388  00113E  0012               	return	
  2389  001140  D7F0               	goto	l78
  2390  001142                     __end_of_Delay_Ms:
  2391                           	opt stack 0
  2392                           tblptru	equ	0xFF8
  2393                           tblptrh	equ	0xFF7
  2394                           tblptrl	equ	0xFF6
  2395                           tablat	equ	0xFF5
  2396                           prodh	equ	0xFF4
  2397                           prodl	equ	0xFF3
  2398                           intcon	equ	0xFF2
  2399                           postinc0	equ	0xFEE
  2400                           wreg	equ	0xFE8
  2401                           postdec1	equ	0xFE5
  2402                           fsr1l	equ	0xFE1
  2403                           indf2	equ	0xFDF
  2404                           postinc2	equ	0xFDE
  2405                           postdec2	equ	0xFDD
  2406                           fsr2h	equ	0xFDA
  2407                           fsr2l	equ	0xFD9
  2408                           status	equ	0xFD8
  2409                           
  2410 ;; *************** function _Send2Lcd *****************
  2411 ;; Defined at:
  2412 ;;		line 288 in file "newmain.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  Adr             1    wreg     const unsigned char 
  2415 ;;  Lcd             2   34[COMRAM] PTR const unsigned char 
  2416 ;;		 -> STR_4(6), STR_3(6), STR_2(14), STR_1(6), 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  Adr             1   36[COMRAM] const unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2428 ;;      Params:         2       0       0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0
  2431 ;;      Totals:         3       0       0       0       0       0       0
  2432 ;;Total ram usage:        3 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    6
  2435 ;; This function calls:
  2436 ;;		_Cmd
  2437 ;;		_Data
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text11
  2444  001038                     __ptext11:
  2445                           	opt stack 0
  2446  001038                     _Send2Lcd:
  2447                           	opt stack 24
  2448                           
  2449                           ;incstack = 0
  2450                           ;Send2Lcd@Adr stored from wreg
  2451  001038  6E25               	movwf	Send2Lcd@Adr,c
  2452                           
  2453                           ;newmain.c: 290: Cmd(Adr);
  2454  00103A  C025  F021         	movff	Send2Lcd@Adr,Cmd@Value
  2455  00103E  6A22               	clrf	Cmd@Value+1,c
  2456  001040  EC11  F009         	call	_Cmd	;wreg free
  2457                           
  2458                           ;newmain.c: 291: while(*Lcd!='\0')
  2459  001044  D00C               	goto	l137
  2460  001046                     
  2461                           ;newmain.c: 292: {
  2462                           ;newmain.c: 293: Data(*Lcd);
  2463  001046  C023  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2464  00104A  C024  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2465  00104E                     	if	0	;tblptru may be non-zero
  2466  00104E                     	endif
  2467  00104E                     	if	0	;tblptru may be non-zero
  2468  00104E                     	endif
  2469  00104E  0008               	tblrd		*
  2470  001050  50F5               	movf	tablat,w,c
  2471  001052  6E21               	movwf	Data@Value,c
  2472  001054  6A22               	clrf	Data@Value+1,c
  2473  001056  EC05  F009         	call	_Data	;wreg free
  2474                           
  2475                           ;newmain.c: 294: Lcd++;
  2476  00105A  4A23               	infsnz	Send2Lcd@Lcd,f,c
  2477  00105C  2A24               	incf	Send2Lcd@Lcd+1,f,c
  2478  00105E                     l137:
  2479  00105E  C023  FFF6         	movff	Send2Lcd@Lcd,tblptrl
  2480  001062  C024  FFF7         	movff	Send2Lcd@Lcd+1,tblptrh
  2481  001066                     	if	0	;tblptru may be non-zero
  2482  001066                     	endif
  2483  001066                     	if	0	;tblptru may be non-zero
  2484  001066                     	endif
  2485  001066  0008               	tblrd		*
  2486  001068  50F5               	movf	tablat,w,c
  2487  00106A  0900               	iorlw	0
  2488  00106C  B4D8               	btfsc	status,2,c
  2489  00106E  0012               	return	
  2490  001070  D7EA               	goto	l138
  2491  001072                     __end_of_Send2Lcd:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           prodh	equ	0xFF4
  2498                           prodl	equ	0xFF3
  2499                           intcon	equ	0xFF2
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           postdec1	equ	0xFE5
  2503                           fsr1l	equ	0xFE1
  2504                           indf2	equ	0xFDF
  2505                           postinc2	equ	0xFDE
  2506                           postdec2	equ	0xFDD
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _Data *****************
  2512 ;; Defined at:
  2513 ;;		line 271 in file "newmain.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  Value           2   32[COMRAM] int 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2527 ;;      Params:         2       0       0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0
  2530 ;;      Totals:         2       0       0       0       0       0       0
  2531 ;;Total ram usage:        2 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    5
  2534 ;; This function calls:
  2535 ;;		_Delay_us
  2536 ;; This function is called by:
  2537 ;;		_Send2Lcd
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text12
  2542  00120A                     __ptext12:
  2543                           	opt stack 0
  2544  00120A                     _Data:
  2545                           	opt stack 24
  2546                           
  2547                           ;newmain.c: 273: PORTD = Value;
  2548                           
  2549                           ;incstack = 0
  2550  00120A  C021  FF83         	movff	Data@Value,3971	;volatile
  2551                           
  2552                           ;newmain.c: 274: RC0 = 1;
  2553  00120E  8082               	bsf	3970,0,c	;volatile
  2554                           
  2555                           ;newmain.c: 275: RC1 = 1;
  2556  001210  8282               	bsf	3970,1,c	;volatile
  2557                           
  2558                           ;newmain.c: 276: Delay_us(25);
  2559  001212  0E00               	movlw	0
  2560  001214  6E1E               	movwf	Delay_us@us+1,c
  2561  001216  0E19               	movlw	25
  2562  001218  6E1D               	movwf	Delay_us@us,c
  2563  00121A  ECD8  F008         	call	_Delay_us	;wreg free
  2564                           
  2565                           ;newmain.c: 277: RC1 = 0;
  2566  00121E  9282               	bcf	3970,1,c	;volatile
  2567  001220  0012               	return		;funcret
  2568  001222                     __end_of_Data:
  2569                           	opt stack 0
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           intcon	equ	0xFF2
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1l	equ	0xFE1
  2581                           indf2	equ	0xFDF
  2582                           postinc2	equ	0xFDE
  2583                           postdec2	equ	0xFDD
  2584                           fsr2h	equ	0xFDA
  2585                           fsr2l	equ	0xFD9
  2586                           status	equ	0xFD8
  2587                           
  2588 ;; *************** function _Cmd *****************
  2589 ;; Defined at:
  2590 ;;		line 255 in file "newmain.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  Value           2   32[COMRAM] int 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2604 ;;      Params:         2       0       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0
  2607 ;;      Totals:         2       0       0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    5
  2611 ;; This function calls:
  2612 ;;		_Delay_us
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;;		_Send2Lcd
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text13
  2620  001222                     __ptext13:
  2621                           	opt stack 0
  2622  001222                     _Cmd:
  2623                           	opt stack 24
  2624                           
  2625                           ;newmain.c: 257: PORTD = Value;
  2626                           
  2627                           ;incstack = 0
  2628  001222  C021  FF83         	movff	Cmd@Value,3971	;volatile
  2629                           
  2630                           ;newmain.c: 258: RC0 = 0;
  2631  001226  9082               	bcf	3970,0,c	;volatile
  2632                           
  2633                           ;newmain.c: 259: RC1 = 1;
  2634  001228  8282               	bsf	3970,1,c	;volatile
  2635                           
  2636                           ;newmain.c: 260: Delay_us(25);
  2637  00122A  0E00               	movlw	0
  2638  00122C  6E1E               	movwf	Delay_us@us+1,c
  2639  00122E  0E19               	movlw	25
  2640  001230  6E1D               	movwf	Delay_us@us,c
  2641  001232  ECD8  F008         	call	_Delay_us	;wreg free
  2642                           
  2643                           ;newmain.c: 261: RC1 = 0;
  2644  001236  9282               	bcf	3970,1,c	;volatile
  2645  001238  0012               	return		;funcret
  2646  00123A                     __end_of_Cmd:
  2647                           	opt stack 0
  2648                           tblptru	equ	0xFF8
  2649                           tblptrh	equ	0xFF7
  2650                           tblptrl	equ	0xFF6
  2651                           tablat	equ	0xFF5
  2652                           prodh	equ	0xFF4
  2653                           prodl	equ	0xFF3
  2654                           intcon	equ	0xFF2
  2655                           postinc0	equ	0xFEE
  2656                           wreg	equ	0xFE8
  2657                           postdec1	equ	0xFE5
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           postdec2	equ	0xFDD
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _Delay_us *****************
  2667 ;; Defined at:
  2668 ;;		line 305 in file "newmain.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  us              2   28[COMRAM] int 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         2       0       0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0       0       0
  2685 ;;      Totals:         4       0       0       0       0       0       0
  2686 ;;Total ram usage:        4 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    4
  2689 ;; This function calls:
  2690 ;;		Nothing
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;;		_Cmd
  2694 ;;		_Data
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text14
  2699  0011B0                     __ptext14:
  2700                           	opt stack 0
  2701  0011B0                     _Delay_us:
  2702                           	opt stack 24
  2703                           
  2704                           ;newmain.c: 307: us=us>>1;
  2705                           
  2706                           ;incstack = 0
  2707  0011B0  341E               	rlcf	Delay_us@us+1,w,c
  2708  0011B2  301E               	rrcf	Delay_us@us+1,w,c
  2709  0011B4  6E1F               	movwf	??_Delay_us& (0+255),c
  2710  0011B6  301D               	rrcf	Delay_us@us,w,c
  2711  0011B8  6E1D               	movwf	Delay_us@us,c
  2712  0011BA  C01F  F01E         	movff	??_Delay_us,Delay_us@us+1
  2713                           
  2714                           ;newmain.c: 308: while(us!=1)
  2715  0011BE  D003               	goto	l143
  2716  0011C0                     
  2717                           ;newmain.c: 309: us--;
  2718  0011C0  061D               	decf	Delay_us@us,f,c
  2719  0011C2  A0D8               	btfss	status,0,c
  2720  0011C4  061E               	decf	Delay_us@us+1,f,c
  2721  0011C6                     l143:
  2722  0011C6  041D               	decf	Delay_us@us,w,c
  2723  0011C8  101E               	iorwf	Delay_us@us+1,w,c
  2724  0011CA  B4D8               	btfsc	status,2,c
  2725  0011CC  0012               	return	
  2726  0011CE  D7F8               	goto	l144
  2727  0011D0                     __end_of_Delay_us:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1l	equ	0xFE1
  2740                           indf2	equ	0xFDF
  2741                           postinc2	equ	0xFDE
  2742                           postdec2	equ	0xFDD
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _Myusartinit *****************
  2748 ;; Defined at:
  2749 ;;		line 314 in file "newmain.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, status,2
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:         0       0       0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    4
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text15
  2778  0011F0                     __ptext15:
  2779                           	opt stack 0
  2780  0011F0                     _Myusartinit:
  2781                           	opt stack 26
  2782                           
  2783                           ;newmain.c: 319: TRISCbits.TRISC6 = 1;
  2784                           
  2785                           ;incstack = 0
  2786  0011F0  8C94               	bsf	3988,6,c	;volatile
  2787                           
  2788                           ;newmain.c: 320: TRISCbits.TRISC7 = 1;
  2789  0011F2  8E94               	bsf	3988,7,c	;volatile
  2790                           
  2791                           ;newmain.c: 324: BAUDCONbits.BRG16 = 1 ;
  2792  0011F4  86B8               	bsf	4024,3,c	;volatile
  2793                           
  2794                           ;newmain.c: 325: TXSTAbits.BRGH = 1;
  2795  0011F6  84AC               	bsf	4012,2,c	;volatile
  2796                           
  2797                           ;newmain.c: 326: SPBRG = 207;
  2798  0011F8  0ECF               	movlw	207
  2799  0011FA  6EAF               	movwf	4015,c	;volatile
  2800                           
  2801                           ;newmain.c: 329: TXSTAbits.SYNC = 0;
  2802  0011FC  98AC               	bcf	4012,4,c	;volatile
  2803                           
  2804                           ;newmain.c: 330: RCSTAbits.SPEN = 1;
  2805  0011FE  8EAB               	bsf	4011,7,c	;volatile
  2806                           
  2807                           ;newmain.c: 336: PIR1bits.RCIF = 0;
  2808  001200  9A9E               	bcf	3998,5,c	;volatile
  2809                           
  2810                           ;newmain.c: 338: RCSTAbits.CREN = 1;
  2811  001202  88AB               	bsf	4011,4,c	;volatile
  2812                           
  2813                           ;newmain.c: 341: PIE1bits.RCIE = 1;
  2814  001204  8A9D               	bsf	3997,5,c	;volatile
  2815                           
  2816                           ;newmain.c: 342: IPR1bits.RCIP = 1;
  2817  001206  8A9F               	bsf	3999,5,c	;volatile
  2818  001208  0012               	return	
  2819  00120A                     __end_of_Myusartinit:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           prodh	equ	0xFF4
  2826                           prodl	equ	0xFF3
  2827                           intcon	equ	0xFF2
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postdec1	equ	0xFE5
  2831                           fsr1l	equ	0xFE1
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           status	equ	0xFD8
  2838                           
  2839 ;; *************** function _Delay_Seconds *****************
  2840 ;; Defined at:
  2841 ;;		line 111 in file "newmain.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  s               1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  s               1   29[COMRAM] unsigned char 
  2846 ;;  i               1   31[COMRAM] unsigned char 
  2847 ;;  j               1   30[COMRAM] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2857 ;;      Params:         0       0       0       0       0       0       0
  2858 ;;      Locals:         3       0       0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0
  2860 ;;      Totals:         4       0       0       0       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    4
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text16
  2872  0010E4                     __ptext16:
  2873                           	opt stack 0
  2874  0010E4                     _Delay_Seconds:
  2875                           	opt stack 26
  2876                           
  2877                           ;incstack = 0
  2878                           ;Delay_Seconds@s stored from wreg
  2879  0010E4  6E1E               	movwf	Delay_Seconds@s,c
  2880                           
  2881                           ;newmain.c: 113: unsigned char i,j;
  2882                           ;newmain.c: 114: for(j = 0; j < s; j++)
  2883  0010E6  0E00               	movlw	0
  2884  0010E8  6E1F               	movwf	Delay_Seconds@j,c
  2885  0010EA  D011               	goto	l86
  2886  0010EC                     
  2887                           ;newmain.c: 115: {
  2888                           ;newmain.c: 116: for(i = 0; i < 100; i++)_delay((unsigned long)((10)*(8000000/4000.0)));
  2889  0010EC  0E00               	movlw	0
  2890  0010EE  6E20               	movwf	Delay_Seconds@i,c
  2891  0010F0                     l1517:
  2892  0010F0  0E63               	movlw	99
  2893  0010F2  6420               	cpfsgt	Delay_Seconds@i,c
  2894  0010F4  D001               	goto	l88
  2895  0010F6  D00A               	goto	u1210
  2896  0010F8                     l88:
  2897  0010F8  0E1A               	movlw	26
  2898  0010FA  6E1D               	movwf	??_Delay_Seconds& (0+255),c
  2899  0010FC  0EF8               	movlw	248
  2900  0010FE                     u1467:
  2901  0010FE  2EE8               	decfsz	wreg,f,c
  2902  001100  D7FE               	bra	u1467
  2903  001102  2E1D               	decfsz	??_Delay_Seconds& (0+255),f,c
  2904  001104  D7FC               	bra	u1467
  2905  001106  D000               	nop2	
  2906  001108  2A20               	incf	Delay_Seconds@i,f,c
  2907  00110A  D7F2               	goto	l1517
  2908  00110C                     u1210:
  2909  00110C  2A1F               	incf	Delay_Seconds@j,f,c
  2910  00110E                     l86:
  2911  00110E  501E               	movf	Delay_Seconds@s,w,c
  2912  001110  5C1F               	subwf	Delay_Seconds@j,w,c
  2913  001112  B0D8               	btfsc	status,0,c
  2914  001114  0012               	return	
  2915  001116  D7EA               	goto	l87
  2916  001118                     __end_of_Delay_Seconds:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           postdec1	equ	0xFE5
  2928                           fsr1l	equ	0xFE1
  2929                           indf2	equ	0xFDF
  2930                           postinc2	equ	0xFDE
  2931                           postdec2	equ	0xFDD
  2932                           fsr2h	equ	0xFDA
  2933                           fsr2l	equ	0xFD9
  2934                           status	equ	0xFD8
  2935                           
  2936 ;; *************** function _tc_int *****************
  2937 ;; Defined at:
  2938 ;;		line 211 in file "newmain.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2952 ;;      Params:         0       0       0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0
  2954 ;;      Temps:         19       0       0       0       0       0       0
  2955 ;;      Totals:        19       0       0       0       0       0       0
  2956 ;;Total ram usage:       19 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    3
  2959 ;; This function calls:
  2960 ;;		i2_Cmd
  2961 ;;		i2_Delay_us
  2962 ;;		i2_Send2Lcd
  2963 ;; This function is called by:
  2964 ;;		Interrupt level 2
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	intcode
  2969  000008                     __pintcode:
  2970                           	opt stack 0
  2971  000008                     _tc_int:
  2972                           	opt stack 24
  2973                           
  2974                           ;incstack = 0
  2975  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2976  00000A  ED0E  F003         	call	int_func,f	;refresh shadow registers
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           prodh	equ	0xFF4
  2982                           prodl	equ	0xFF3
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           postdec1	equ	0xFE5
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           postinc2	equ	0xFDE
  2990                           postdec2	equ	0xFDD
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995                           	psect	intcode_body
  2996  00061C                     __pintcode_body:
  2997                           	opt stack 24
  2998  00061C                     int_func:
  2999                           	opt stack 24
  3000  00061C  0006               	pop		; remove dummy address from shadow register refresh
  3001  00061E  CFFA F00B          	movff	pclath,??_tc_int+1
  3002  000622  CFFB F00C          	movff	pclatu,??_tc_int+2
  3003  000626  CFE9 F00D          	movff	fsr0l,??_tc_int+3
  3004  00062A  CFEA F00E          	movff	fsr0h,??_tc_int+4
  3005  00062E  CFE1 F00F          	movff	fsr1l,??_tc_int+5
  3006  000632  CFE2 F010          	movff	fsr1h,??_tc_int+6
  3007  000636  CFD9 F011          	movff	fsr2l,??_tc_int+7
  3008  00063A  CFDA F012          	movff	fsr2h,??_tc_int+8
  3009  00063E  CFF3 F013          	movff	prodl,??_tc_int+9
  3010  000642  CFF4 F014          	movff	prodh,??_tc_int+10
  3011  000646  CFF6 F015          	movff	tblptrl,??_tc_int+11
  3012  00064A  CFF7 F016          	movff	tblptrh,??_tc_int+12
  3013  00064E  CFF8 F017          	movff	tblptru,??_tc_int+13
  3014  000652  CFF5 F018          	movff	tablat,??_tc_int+14
  3015  000656  C05E  F019         	movff	btemp,??_tc_int+15
  3016  00065A  C05F  F01A         	movff	btemp+1,??_tc_int+16
  3017  00065E  C060  F01B         	movff	btemp+2,??_tc_int+17
  3018  000662  C061  F01C         	movff	btemp+3,??_tc_int+18
  3019                           
  3020                           ;newmain.c: 213: if(TMR1IE && TMR1IF&&receive!=0){
  3021  000666  B09D               	btfsc	3997,0,c	;volatile
  3022  000668  A09E               	btfss	3998,0,c	;volatile
  3023  00066A  D06C               	goto	i2l118
  3024  00066C  5054               	movf	_receive,w,c
  3025  00066E  1055               	iorwf	_receive+1,w,c
  3026  000670  B4D8               	btfsc	status,2,c
  3027  000672  D068               	goto	i2l118
  3028                           
  3029                           ;newmain.c: 214: if(countout==2){
  3030  000674  0E02               	movlw	2
  3031  000676  1850               	xorwf	_countout,w,c
  3032  000678  1051               	iorwf	_countout+1,w,c
  3033  00067A  A4D8               	btfss	status,2,c
  3034  00067C  D05C               	goto	i2l119
  3035                           
  3036                           ;newmain.c: 215: Cmd(0X01);
  3037  00067E  0E00               	movlw	0
  3038  000680  6E06               	movwf	i2Cmd@Value+1,c
  3039  000682  0E01               	movlw	1
  3040  000684  6E05               	movwf	i2Cmd@Value,c
  3041  000686  EC29  F009         	call	i2_Cmd	;wreg free
  3042                           
  3043                           ;newmain.c: 216: Delay_us(1000);
  3044  00068A  0E03               	movlw	3
  3045  00068C  6E02               	movwf	i2Delay_us@us+1,c
  3046  00068E  0EE8               	movlw	232
  3047  000690  6E01               	movwf	i2Delay_us@us,c
  3048  000692  ECE8  F008         	call	i2_Delay_us	;wreg free
  3049                           
  3050                           ;newmain.c: 217: Send2Lcd(address1,"PIC18");
  3051  000696  0E15               	movlw	low STR_1
  3052  000698  6E07               	movwf	i2Send2Lcd@Lcd,c
  3053  00069A  0E06               	movlw	high STR_1
  3054  00069C  6E08               	movwf	i2Send2Lcd@Lcd+1,c
  3055  00069E  505C               	movf	_address1,w,c
  3056  0006A0  EC39  F008         	call	i2_Send2Lcd
  3057                           
  3058                           ;newmain.c: 218: Send2Lcd(address2,"Game!");
  3059  0006A4  0E0F               	movlw	low STR_4
  3060  0006A6  6E07               	movwf	i2Send2Lcd@Lcd,c
  3061  0006A8  0E06               	movlw	high STR_4
  3062  0006AA  6E08               	movwf	i2Send2Lcd@Lcd+1,c
  3063  0006AC  505A               	movf	_address2,w,c
  3064  0006AE  EC39  F008         	call	i2_Send2Lcd
  3065                           
  3066                           ;newmain.c: 220: if(count<35&&mode ==0 ){address1++;address2++;}
  3067  0006B2  BE57               	btfsc	_count+1,7,c
  3068  0006B4  D006               	goto	i2u132_40
  3069  0006B6  5057               	movf	_count+1,w,c
  3070  0006B8  E10D               	bnz	i2l1675
  3071  0006BA  0E23               	movlw	35
  3072  0006BC  5C56               	subwf	_count,w,c
  3073  0006BE  B0D8               	btfsc	status,0,c
  3074  0006C0  D009               	goto	i2l120
  3075  0006C2                     i2u132_40:
  3076  0006C2  5052               	movf	_mode,w,c
  3077  0006C4  1053               	iorwf	_mode+1,w,c
  3078  0006C6  A4D8               	btfss	status,2,c
  3079  0006C8  D005               	goto	i2l120
  3080  0006CA  4A5C               	infsnz	_address1,f,c
  3081  0006CC  2A5D               	incf	_address1+1,f,c
  3082  0006CE  4A5A               	infsnz	_address2,f,c
  3083  0006D0  2A5B               	incf	_address2+1,f,c
  3084  0006D2  D00C               	goto	i2l122
  3085  0006D4                     i2l120:
  3086  0006D4                     i2l1675:
  3087                           
  3088                           ;newmain.c: 221: else if(count>=0 &&mode ==1){address1--;address2--;}
  3089  0006D4  BE57               	btfsc	_count+1,7,c
  3090  0006D6  D00A               	goto	i2l122
  3091  0006D8  0452               	decf	_mode,w,c
  3092  0006DA  1053               	iorwf	_mode+1,w,c
  3093  0006DC  A4D8               	btfss	status,2,c
  3094  0006DE  D006               	goto	i2l122
  3095  0006E0  065C               	decf	_address1,f,c
  3096  0006E2  A0D8               	btfss	status,0,c
  3097  0006E4  065D               	decf	_address1+1,f,c
  3098  0006E6  065A               	decf	_address2,f,c
  3099  0006E8  A0D8               	btfss	status,0,c
  3100  0006EA  065B               	decf	_address2+1,f,c
  3101  0006EC                     i2l122:
  3102                           
  3103                           ;newmain.c: 222: count++;
  3104  0006EC  4A56               	infsnz	_count,f,c
  3105  0006EE  2A57               	incf	_count+1,f,c
  3106                           
  3107                           ;newmain.c: 223: if(count==35&&mode==0)mode = 1;
  3108  0006F0  0E23               	movlw	35
  3109  0006F2  1856               	xorwf	_count,w,c
  3110  0006F4  1057               	iorwf	_count+1,w,c
  3111  0006F6  A4D8               	btfss	status,2,c
  3112  0006F8  D008               	goto	i2l123
  3113  0006FA  5052               	movf	_mode,w,c
  3114  0006FC  1053               	iorwf	_mode+1,w,c
  3115  0006FE  A4D8               	btfss	status,2,c
  3116  000700  D004               	goto	i2l123
  3117  000702  0E00               	movlw	0
  3118  000704  6E53               	movwf	_mode+1,c
  3119  000706  0E01               	movlw	1
  3120  000708  6E52               	movwf	_mode,c
  3121  00070A                     i2l123:
  3122                           
  3123                           ;newmain.c: 225: if(count==70&&mode==1){mode=0;count=0;}
  3124  00070A  0E46               	movlw	70
  3125  00070C  1856               	xorwf	_count,w,c
  3126  00070E  1057               	iorwf	_count+1,w,c
  3127  000710  A4D8               	btfss	status,2,c
  3128  000712  D00C               	goto	i2l124
  3129  000714  0452               	decf	_mode,w,c
  3130  000716  1053               	iorwf	_mode+1,w,c
  3131  000718  A4D8               	btfss	status,2,c
  3132  00071A  D008               	goto	i2l124
  3133  00071C  0E00               	movlw	0
  3134  00071E  6E53               	movwf	_mode+1,c
  3135  000720  0E00               	movlw	0
  3136  000722  6E52               	movwf	_mode,c
  3137  000724  0E00               	movlw	0
  3138  000726  6E57               	movwf	_count+1,c
  3139  000728  0E00               	movlw	0
  3140  00072A  6E56               	movwf	_count,c
  3141  00072C                     i2l124:
  3142                           
  3143                           ;newmain.c: 227: countout=0;
  3144  00072C  0E00               	movlw	0
  3145  00072E  6E51               	movwf	_countout+1,c
  3146  000730  0E00               	movlw	0
  3147  000732  6E50               	movwf	_countout,c
  3148                           
  3149                           ;newmain.c: 229: }else
  3150  000734  D002               	goto	i2l125
  3151  000736                     i2l119:
  3152                           
  3153                           ;newmain.c: 230: {
  3154                           ;newmain.c: 231: countout++;
  3155  000736  4A50               	infsnz	_countout,f,c
  3156  000738  2A51               	incf	_countout+1,f,c
  3157  00073A                     i2l125:
  3158                           
  3159                           ;newmain.c: 232: }
  3160                           ;newmain.c: 234: TMR1IF=0;
  3161  00073A  909E               	bcf	3998,0,c	;volatile
  3162                           
  3163                           ;newmain.c: 235: TMR1=0x85ED;
  3164  00073C  0E85               	movlw	133
  3165  00073E  6ECF               	movwf	4047,c	;volatile
  3166  000740  0EED               	movlw	237
  3167  000742  6ECE               	movwf	4046,c	;volatile
  3168  000744                     i2l118:
  3169                           
  3170                           ;newmain.c: 236: }
  3171                           ;newmain.c: 238: if(TMR0IE && TMR0IF&&receive!=0){
  3172  000744  BAF2               	btfsc	intcon,5,c	;volatile
  3173  000746  A4F2               	btfss	intcon,2,c	;volatile
  3174  000748  D017               	goto	i2l126
  3175  00074A  5054               	movf	_receive,w,c
  3176  00074C  1055               	iorwf	_receive+1,w,c
  3177  00074E  B4D8               	btfsc	status,2,c
  3178  000750  D013               	goto	i2l126
  3179                           
  3180                           ;newmain.c: 239: TMR0H = TIMER_H;
  3181  000752  C059  FFD7         	movff	_TIMER_H,4055	;volatile
  3182                           
  3183                           ;newmain.c: 240: TMR0L = TIMER_L;
  3184  000756  C058  FFD6         	movff	_TIMER_L,4054	;volatile
  3185                           
  3186                           ;newmain.c: 241: LATCbits.LATC2 = ~LATCbits.LATC2;
  3187  00075A  A48B               	btfss	3979,2,c	;volatile
  3188  00075C  D002               	goto	i2u143_40
  3189  00075E  0E01               	movlw	1
  3190  000760  D001               	goto	i2u143_46
  3191  000762                     i2u143_40:
  3192  000762  0E00               	movlw	0
  3193  000764                     i2u143_46:
  3194  000764  0AFF               	xorlw	255
  3195  000766  6E0A               	movwf	??_tc_int& (0+255),c
  3196  000768  460A               	rlncf	??_tc_int,f,c
  3197  00076A  460A               	rlncf	??_tc_int,f,c
  3198  00076C  508B               	movf	3979,w,c	;volatile
  3199  00076E  180A               	xorwf	??_tc_int,w,c
  3200  000770  0BFB               	andlw	-5
  3201  000772  180A               	xorwf	??_tc_int,w,c
  3202  000774  6E8B               	movwf	3979,c	;volatile
  3203                           
  3204                           ;newmain.c: 242: INTCONbits.TMR0IF= 0;
  3205  000776  94F2               	bcf	intcon,2,c	;volatile
  3206  000778                     i2l126:
  3207                           
  3208                           ;newmain.c: 244: }
  3209                           ;newmain.c: 246: if(RCIF)
  3210  000778  AA9E               	btfss	3998,5,c	;volatile
  3211  00077A  D003               	goto	i2l127
  3212                           
  3213                           ;newmain.c: 247: {
  3214                           ;newmain.c: 248: receive= RCREG;
  3215  00077C  CFAE F054          	movff	4014,_receive	;volatile
  3216  000780  6A55               	clrf	_receive+1,c
  3217  000782                     i2l127:
  3218  000782  C01C  F061         	movff	??_tc_int+18,btemp+3
  3219  000786  C01B  F060         	movff	??_tc_int+17,btemp+2
  3220  00078A  C01A  F05F         	movff	??_tc_int+16,btemp+1
  3221  00078E  C019  F05E         	movff	??_tc_int+15,btemp
  3222  000792  C018  FFF5         	movff	??_tc_int+14,tablat
  3223  000796  C017  FFF8         	movff	??_tc_int+13,tblptru
  3224  00079A  C016  FFF7         	movff	??_tc_int+12,tblptrh
  3225  00079E  C015  FFF6         	movff	??_tc_int+11,tblptrl
  3226  0007A2  C014  FFF4         	movff	??_tc_int+10,prodh
  3227  0007A6  C013  FFF3         	movff	??_tc_int+9,prodl
  3228  0007AA  C012  FFDA         	movff	??_tc_int+8,fsr2h
  3229  0007AE  C011  FFD9         	movff	??_tc_int+7,fsr2l
  3230  0007B2  C010  FFE2         	movff	??_tc_int+6,fsr1h
  3231  0007B6  C00F  FFE1         	movff	??_tc_int+5,fsr1l
  3232  0007BA  C00E  FFEA         	movff	??_tc_int+4,fsr0h
  3233  0007BE  C00D  FFE9         	movff	??_tc_int+3,fsr0l
  3234  0007C2  C00C  FFFB         	movff	??_tc_int+2,pclatu
  3235  0007C6  C00B  FFFA         	movff	??_tc_int+1,pclath
  3236  0007CA  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3237  0007CC  0011               	retfie		f
  3238  0007CE                     __end_of_tc_int:
  3239                           	opt stack 0
  3240                           pclatu	equ	0xFFB
  3241                           pclath	equ	0xFFA
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           fsr0h	equ	0xFEA
  3251                           fsr0l	equ	0xFE9
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1h	equ	0xFE2
  3255                           fsr1l	equ	0xFE1
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           postdec2	equ	0xFDD
  3259                           fsr2h	equ	0xFDA
  3260                           fsr2l	equ	0xFD9
  3261                           status	equ	0xFD8
  3262                           
  3263 ;; *************** function i2_Send2Lcd *****************
  3264 ;; Defined at:
  3265 ;;		line 288 in file "newmain.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  Adr             1    wreg     const unsigned char 
  3268 ;;  Lcd             2    6[COMRAM] PTR const unsigned char 
  3269 ;;		 -> STR_4(6), STR_3(6), STR_2(14), STR_1(6), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  Adr             1    8[COMRAM] const unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3281 ;;      Params:         2       0       0       0       0       0       0
  3282 ;;      Locals:         1       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0
  3284 ;;      Totals:         3       0       0       0       0       0       0
  3285 ;;Total ram usage:        3 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    2
  3288 ;; This function calls:
  3289 ;;		i2_Cmd
  3290 ;;		i2_Data
  3291 ;; This function is called by:
  3292 ;;		_tc_int
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text18
  3297  001072                     __ptext18:
  3298                           	opt stack 0
  3299  001072                     i2_Send2Lcd:
  3300                           	opt stack 24
  3301                           
  3302                           ;incstack = 0
  3303                           ;i2Send2Lcd@Adr stored from wreg
  3304  001072  6E09               	movwf	i2Send2Lcd@Adr,c
  3305                           
  3306                           ;newmain.c: 290: Cmd(Adr);
  3307  001074  C009  F005         	movff	i2Send2Lcd@Adr,i2Cmd@Value
  3308  001078  6A06               	clrf	i2Cmd@Value+1,c
  3309  00107A  EC29  F009         	call	i2_Cmd	;wreg free
  3310                           
  3311                           ;newmain.c: 291: while(*Lcd!='\0')
  3312  00107E  D00C               	goto	i2l137
  3313  001080                     
  3314                           ;newmain.c: 292: {
  3315                           ;newmain.c: 293: Data(*Lcd);
  3316  001080  C007  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  3317  001084  C008  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  3318  001088                     	if	0	;tblptru may be non-zero
  3319  001088                     	endif
  3320  001088                     	if	0	;tblptru may be non-zero
  3321  001088                     	endif
  3322  001088  0008               	tblrd		*
  3323  00108A  50F5               	movf	tablat,w,c
  3324  00108C  6E05               	movwf	i2Data@Value,c
  3325  00108E  6A06               	clrf	i2Data@Value+1,c
  3326  001090  EC1D  F009         	call	i2_Data	;wreg free
  3327                           
  3328                           ;newmain.c: 294: Lcd++;
  3329  001094  4A07               	infsnz	i2Send2Lcd@Lcd,f,c
  3330  001096  2A08               	incf	i2Send2Lcd@Lcd+1,f,c
  3331  001098                     i2l137:
  3332  001098  C007  FFF6         	movff	i2Send2Lcd@Lcd,tblptrl
  3333  00109C  C008  FFF7         	movff	i2Send2Lcd@Lcd+1,tblptrh
  3334  0010A0                     	if	0	;tblptru may be non-zero
  3335  0010A0                     	endif
  3336  0010A0                     	if	0	;tblptru may be non-zero
  3337  0010A0                     	endif
  3338  0010A0  0008               	tblrd		*
  3339  0010A2  50F5               	movf	tablat,w,c
  3340  0010A4  0900               	iorlw	0
  3341  0010A6  B4D8               	btfsc	status,2,c
  3342  0010A8  0012               	return	
  3343  0010AA  D7EA               	goto	i2l138
  3344  0010AC                     __end_ofi2_Send2Lcd:
  3345                           	opt stack 0
  3346                           pclatu	equ	0xFFB
  3347                           pclath	equ	0xFFA
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           intcon	equ	0xFF2
  3355                           postinc0	equ	0xFEE
  3356                           fsr0h	equ	0xFEA
  3357                           fsr0l	equ	0xFE9
  3358                           wreg	equ	0xFE8
  3359                           postdec1	equ	0xFE5
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function i2_Data *****************
  3370 ;; Defined at:
  3371 ;;		line 271 in file "newmain.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  Value           2    4[COMRAM] int 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3385 ;;      Params:         2       0       0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0
  3388 ;;      Totals:         2       0       0       0       0       0       0
  3389 ;;Total ram usage:        2 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    1
  3392 ;; This function calls:
  3393 ;;		i2_Delay_us
  3394 ;; This function is called by:
  3395 ;;		i2_Send2Lcd
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text19
  3400  00123A                     __ptext19:
  3401                           	opt stack 0
  3402  00123A                     i2_Data:
  3403                           	opt stack 24
  3404                           
  3405                           ;newmain.c: 273: PORTD = Value;
  3406                           
  3407                           ;incstack = 0
  3408  00123A  C005  FF83         	movff	i2Data@Value,3971	;volatile
  3409                           
  3410                           ;newmain.c: 274: RC0 = 1;
  3411  00123E  8082               	bsf	3970,0,c	;volatile
  3412                           
  3413                           ;newmain.c: 275: RC1 = 1;
  3414  001240  8282               	bsf	3970,1,c	;volatile
  3415                           
  3416                           ;newmain.c: 276: Delay_us(25);
  3417  001242  0E00               	movlw	0
  3418  001244  6E02               	movwf	i2Delay_us@us+1,c
  3419  001246  0E19               	movlw	25
  3420  001248  6E01               	movwf	i2Delay_us@us,c
  3421  00124A  ECE8  F008         	call	i2_Delay_us	;wreg free
  3422                           
  3423                           ;newmain.c: 277: RC1 = 0;
  3424  00124E  9282               	bcf	3970,1,c	;volatile
  3425  001250  0012               	return		;funcret
  3426  001252                     __end_ofi2_Data:
  3427                           	opt stack 0
  3428                           pclatu	equ	0xFFB
  3429                           pclath	equ	0xFFA
  3430                           tblptru	equ	0xFF8
  3431                           tblptrh	equ	0xFF7
  3432                           tblptrl	equ	0xFF6
  3433                           tablat	equ	0xFF5
  3434                           prodh	equ	0xFF4
  3435                           prodl	equ	0xFF3
  3436                           intcon	equ	0xFF2
  3437                           postinc0	equ	0xFEE
  3438                           fsr0h	equ	0xFEA
  3439                           fsr0l	equ	0xFE9
  3440                           wreg	equ	0xFE8
  3441                           postdec1	equ	0xFE5
  3442                           fsr1h	equ	0xFE2
  3443                           fsr1l	equ	0xFE1
  3444                           indf2	equ	0xFDF
  3445                           postinc2	equ	0xFDE
  3446                           postdec2	equ	0xFDD
  3447                           fsr2h	equ	0xFDA
  3448                           fsr2l	equ	0xFD9
  3449                           status	equ	0xFD8
  3450                           
  3451 ;; *************** function i2_Cmd *****************
  3452 ;; Defined at:
  3453 ;;		line 255 in file "newmain.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  Value           2    4[COMRAM] int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3467 ;;      Params:         2       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0       0       0
  3470 ;;      Totals:         2       0       0       0       0       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		i2_Delay_us
  3476 ;; This function is called by:
  3477 ;;		_tc_int
  3478 ;;		i2_Send2Lcd
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text20
  3483  001252                     __ptext20:
  3484                           	opt stack 0
  3485  001252                     i2_Cmd:
  3486                           	opt stack 24
  3487                           
  3488                           ;newmain.c: 257: PORTD = Value;
  3489                           
  3490                           ;incstack = 0
  3491  001252  C005  FF83         	movff	i2Cmd@Value,3971	;volatile
  3492                           
  3493                           ;newmain.c: 258: RC0 = 0;
  3494  001256  9082               	bcf	3970,0,c	;volatile
  3495                           
  3496                           ;newmain.c: 259: RC1 = 1;
  3497  001258  8282               	bsf	3970,1,c	;volatile
  3498                           
  3499                           ;newmain.c: 260: Delay_us(25);
  3500  00125A  0E00               	movlw	0
  3501  00125C  6E02               	movwf	i2Delay_us@us+1,c
  3502  00125E  0E19               	movlw	25
  3503  001260  6E01               	movwf	i2Delay_us@us,c
  3504  001262  ECE8  F008         	call	i2_Delay_us	;wreg free
  3505                           
  3506                           ;newmain.c: 261: RC1 = 0;
  3507  001266  9282               	bcf	3970,1,c	;volatile
  3508  001268  0012               	return		;funcret
  3509  00126A                     __end_ofi2_Cmd:
  3510                           	opt stack 0
  3511                           pclatu	equ	0xFFB
  3512                           pclath	equ	0xFFA
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           prodh	equ	0xFF4
  3518                           prodl	equ	0xFF3
  3519                           intcon	equ	0xFF2
  3520                           postinc0	equ	0xFEE
  3521                           fsr0h	equ	0xFEA
  3522                           fsr0l	equ	0xFE9
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function i2_Delay_us *****************
  3535 ;; Defined at:
  3536 ;;		line 305 in file "newmain.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  us              2    0[COMRAM] int 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3550 ;;      Params:         2       0       0       0       0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0
  3552 ;;      Temps:          2       0       0       0       0       0       0
  3553 ;;      Totals:         4       0       0       0       0       0       0
  3554 ;;Total ram usage:        4 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_tc_int
  3560 ;;		i2_Cmd
  3561 ;;		i2_Data
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text21
  3566  0011D0                     __ptext21:
  3567                           	opt stack 0
  3568  0011D0                     i2_Delay_us:
  3569                           	opt stack 24
  3570                           
  3571                           ;newmain.c: 307: us=us>>1;
  3572                           
  3573                           ;incstack = 0
  3574  0011D0  3402               	rlcf	i2Delay_us@us+1,w,c
  3575  0011D2  3002               	rrcf	i2Delay_us@us+1,w,c
  3576  0011D4  6E03               	movwf	??i2_Delay_us& (0+255),c
  3577  0011D6  3001               	rrcf	i2Delay_us@us,w,c
  3578  0011D8  6E01               	movwf	i2Delay_us@us,c
  3579  0011DA  C003  F002         	movff	??i2_Delay_us,i2Delay_us@us+1
  3580                           
  3581                           ;newmain.c: 308: while(us!=1)
  3582  0011DE  D003               	goto	i2l143
  3583  0011E0                     
  3584                           ;newmain.c: 309: us--;
  3585  0011E0  0601               	decf	i2Delay_us@us,f,c
  3586  0011E2  A0D8               	btfss	status,0,c
  3587  0011E4  0602               	decf	i2Delay_us@us+1,f,c
  3588  0011E6                     i2l143:
  3589  0011E6  0401               	decf	i2Delay_us@us,w,c
  3590  0011E8  1002               	iorwf	i2Delay_us@us+1,w,c
  3591  0011EA  B4D8               	btfsc	status,2,c
  3592  0011EC  0012               	return	
  3593  0011EE  D7F8               	goto	i2l144
  3594  0011F0                     __end_ofi2_Delay_us:
  3595                           	opt stack 0
  3596                           pclatu	equ	0xFFB
  3597                           pclath	equ	0xFFA
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           postinc0	equ	0xFEE
  3606                           fsr0h	equ	0xFEA
  3607                           fsr0l	equ	0xFE9
  3608                           wreg	equ	0xFE8
  3609                           postdec1	equ	0xFE5
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           pclatu	equ	0xFFB
  3619                           pclath	equ	0xFFA
  3620                           tblptru	equ	0xFF8
  3621                           tblptrh	equ	0xFF7
  3622                           tblptrl	equ	0xFF6
  3623                           tablat	equ	0xFF5
  3624                           prodh	equ	0xFF4
  3625                           prodl	equ	0xFF3
  3626                           intcon	equ	0xFF2
  3627                           postinc0	equ	0xFEE
  3628                           fsr0h	equ	0xFEA
  3629                           fsr0l	equ	0xFE9
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           postdec2	equ	0xFDD
  3637                           fsr2h	equ	0xFDA
  3638                           fsr2l	equ	0xFD9
  3639                           status	equ	0xFD8
  3640                           
  3641                           	psect	rparam
  3642  0000                     pclatu	equ	0xFFB
  3643                           pclath	equ	0xFFA
  3644                           tblptru	equ	0xFF8
  3645                           tblptrh	equ	0xFF7
  3646                           tblptrl	equ	0xFF6
  3647                           tablat	equ	0xFF5
  3648                           prodh	equ	0xFF4
  3649                           prodl	equ	0xFF3
  3650                           intcon	equ	0xFF2
  3651                           postinc0	equ	0xFEE
  3652                           fsr0h	equ	0xFEA
  3653                           fsr0l	equ	0xFE9
  3654                           wreg	equ	0xFE8
  3655                           postdec1	equ	0xFE5
  3656                           fsr1h	equ	0xFE2
  3657                           fsr1l	equ	0xFE1
  3658                           indf2	equ	0xFDF
  3659                           postinc2	equ	0xFDE
  3660                           postdec2	equ	0xFDD
  3661                           fsr2h	equ	0xFDA
  3662                           fsr2l	equ	0xFD9
  3663                           status	equ	0xFD8
  3664                           
  3665                           	psect	temp
  3666  00005E                     btemp:
  3667                           	opt stack 0
  3668  00005E                     	ds	1
  3669  0000                     int$flags	set	btemp
  3670  0000                     wtemp6	set	btemp+1
  3671                           pclatu	equ	0xFFB
  3672                           pclath	equ	0xFFA
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           intcon	equ	0xFF2
  3680                           postinc0	equ	0xFEE
  3681                           fsr0h	equ	0xFEA
  3682                           fsr0l	equ	0xFE9
  3683                           wreg	equ	0xFE8
  3684                           postdec1	equ	0xFE5
  3685                           fsr1h	equ	0xFE2
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    0
    Data        346
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     79      93
    BANK0           128      0     114
    BANK1           256      0     228
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    Send2Lcd@Lcd	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[14]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_Sound_Play
    _Sound_Play->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftdiv->___lwtoft
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _Send2Lcd->_Cmd
    _Send2Lcd->_Data
    _Data->_Delay_us
    _Cmd->_Delay_us

Critical Paths under _tc_int in COMRAM

    _tc_int->i2_Send2Lcd
    i2_Send2Lcd->i2_Cmd
    i2_Send2Lcd->i2_Data
    i2_Data->i2_Delay_us
    i2_Cmd->i2_Delay_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   18278
                                             77 COMRAM     2     2      0
                                _Cmd
                           _Delay_Ms
                      _Delay_Seconds
                           _Delay_us
                        _Myusartinit
                           _Send2Lcd
                         _Sound_Play
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Sound_Play                                           7     3      4   13298
                                             70 COMRAM     7     3      4
                           _Delay_Ms
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftneg
                            ___fttol
                           ___lwtoft
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2564
                                             36 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                             55 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     197
                                             40 COMRAM     3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3176
                                             39 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3862
                                             43 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2633
                                             36 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2466
                                             28 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Delay_Ms                                             5     3      2     198
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Send2Lcd                                             3     1      2    2353
                                             34 COMRAM     3     1      2
                                _Cmd
                               _Data
 ---------------------------------------------------------------------------------
 (2) _Data                                                 2     0      2     726
                                             32 COMRAM     2     0      2
                           _Delay_us
 ---------------------------------------------------------------------------------
 (2) _Cmd                                                  2     0      2    1308
                                             32 COMRAM     2     0      2
                           _Delay_us
 ---------------------------------------------------------------------------------
 (3) _Delay_us                                             4     2      2     628
                                             28 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay_Seconds                                        4     4      0      92
                                             28 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tc_int                                              19    19      0     811
                                              9 COMRAM    19    19      0
                              i2_Cmd
                         i2_Delay_us
                         i2_Send2Lcd
 ---------------------------------------------------------------------------------
 (5) i2_Send2Lcd                                           3     1      2     489
                                              6 COMRAM     3     1      2
                              i2_Cmd
                             i2_Data
 ---------------------------------------------------------------------------------
 (6) i2_Data                                               2     0      2     172
                                              4 COMRAM     2     0      2
                         i2_Delay_us
 ---------------------------------------------------------------------------------
 (6) i2_Cmd                                                2     0      2     198
                                              4 COMRAM     2     0      2
                         i2_Delay_us
 ---------------------------------------------------------------------------------
 (7) i2_Delay_us                                           4     2      2     124
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Cmd
     _Delay_us
   _Delay_Ms
   _Delay_Seconds
   _Delay_us
   _Myusartinit
   _Send2Lcd
     _Cmd
       _Delay_us
     _Data
       _Delay_us
   _Sound_Play
     _Delay_Ms
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     ___lwtoft
       ___ftpack
     ___wmul (ARG)
   ___wmul

 _tc_int (ROOT)
   i2_Cmd
     i2_Delay_us
   i2_Delay_us
   i2_Send2Lcd
     i2_Cmd
       i2_Delay_us
     i2_Data
       i2_Delay_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      E4       6       89.1%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      72       4       89.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4F      5D       1       73.8%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      14        0.0%
DATA                 0      0     1B3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Jan 05 16:25:50 2018

                     l77 1134                       l86 110E                       l78 1122  
                     l87 10EC                       l88 10F8      ___wmul@multiplicand 001F  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             ___ftadd@exp1 0037  
           ___ftadd@exp2 0036             ___ftadd@sign 0035                      l100 0A66  
                    l102 0A7A                      l143 11C6                      l144 11C0  
                    l137 105E                      l138 1046                      l410 089C  
                    l404 08B0                      l421 0908                      l422 0924  
                    l430 0D20                      l423 0954                      l431 0D5E  
                    l432 0D84                      l345 10C0                      l409 08A6  
                    l370 0F1E                      l418 08E4                      l371 0F14  
                    l419 08DA                      l364 0EC2                      l428 0CF8  
                    l365 0EB8                      l454 11A2                      l367 0EF6  
                    l368 0EE0                      l472 0CA2                      l464 0C08  
                    l473 0C96                      l466 0C7E                      l395 0820  
                    l475 0CBE                      l467 0C6E                      l399 084A  
           __CFG_CPB$OFF 000000                      _RC0 007C10                      _RC1 007C11  
           __CFG_CPD$OFF 000000                      u750 0EAA                      u910 083C  
                    u841 07DE                      u851 07F2                      u940 087A  
                    u790 0F28                      u880 0812                      u980 08B8  
                    _Cmd 1222                      prod 000FF3                      wreg 000FE8  
           __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000                     ?_Cmd 0021  
           ___ftdiv@cntr 0031             ___ftdiv@sign 0036             __CFG_WDT$OFF 000000  
                   l1517 10F0                     l1641 0A72                     STR_1 0615  
                   STR_2 0601                     STR_3 0615                     STR_4 060F  
                   u1010 08EC                     u1121 0BEC                     u1210 110C  
                   u1051 0CE0                     u1140 0C26                     u1071 0D08  
                   u1145 0C1E                     u1180 0CA8                     u1270 0AD4  
                   u1457 1128                     u1467 10FE                     _RCIF 007CF5  
                   _TMR1 000FCE             __CFG_WDTPS$1 000000                     _Data 120A  
                   _main 097A             ___ftpack@arg 001D                     _mode 0052  
           ___ftpack@exp 0020                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 005E  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_Cmd 0023  
           ___fttol@exp1 0046             ___fttol@lval 0042                    ?_Data 0021  
                  ?_main 0001          __end_of___ftadd 097A          __end_of___ftdiv 0DB6  
        __end_of___ftneg 11B0                    _T1CON 000FCD          __end_of___fttol 0CD0  
                  i2l120 06D4                    i2l122 06EC                    i2l123 070A  
                  i2l124 072C                    i2l125 073A                    i2l126 0778  
                  i2l118 0744                    i2l143 11E6                    i2l127 0782  
                  i2l119 0736                    i2l144 11E0                    i2l137 1098  
                  i2l138 1080                    _RCREG 000FAE                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    i2_Cmd 1252                    _SPBRG 000FAF  
                  _PORTD 000F83                    _TRISC 000F94                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000              ?i2_Delay_us 0001  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000                    _Notes 0100  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 0028                    _count 0056  
          ___ftpack@sign 0021                    main@i 004F                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8                    wtemp6 005F  
            ?i2_Send2Lcd 0007         __end_of_Delay_Ms 1142         __end_of_Delay_us 11D0  
         __CFG_PBADEN$ON 000000             __end_of_Data 1222          __initialization 0F48  
           __end_of_main 0ADC                   ??_Data 0023         __end_of_Send2Lcd 1072  
                 ??_main 004E            ___fttol@sign1 0041            __activetblptr 000001  
            Send2Lcd@Adr 0025              Send2Lcd@Lcd 0023                   ?i2_Cmd 0005  
       __end_of___awtoft 10E4         __end_of___ftpack 0F48                   i2l1675 06D4  
       __end_of___lwtoft 118C                   _TMR0IE 007F95                   _TMR0IF 007F92  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   i2_Data 123A  
         __CFG_XINST$OFF 000000      __size_ofi2_Delay_us 0020                   ___wmul 1142  
              ??___ftadd 0032           __CFG_STVREN$ON 000000                ??___ftdiv 002E  
              ??___ftneg 002C                ??___fttol 003C                   clear_0 0FAE  
                 _tc_int 0008      __size_ofi2_Send2Lcd 003A             __pdataCOMRAM 005A  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               _Sound_Play 0ADC               __accesstop 0080  
__end_of__initialization 0FB4               ___ftadd@f1 002C               ___ftadd@f2 002F  
          ___rparam_used 000001               ___ftdiv@f1 0028               ___ftdiv@f2 002B  
             ___ftdiv@f3 0032               ___ftneg@f1 0029               ___awtoft@c 0025  
          __end_ofi2_Cmd 126A               ___fttol@f1 0038           __pcstackCOMRAM 0001  
           __pidataBANK0 0FC6             __pidataBANK1 0DB6               ___lwtoft@c 0025  
                ??i2_Cmd 0007                ?_Delay_Ms 001D                ?_Delay_us 001D  
          ??_Myusartinit 001D                  ?i2_Data 0005                ?_Send2Lcd 0023  
         Delay_Seconds@i 0020           Delay_Seconds@j 001F           Delay_Seconds@s 001E  
                ?___wmul 001D                  ?_tc_int 0001   __size_of_Delay_Seconds 0034  
              ?___awtoft 0025                ?___ftpack 001D                ?___lwtoft 0025  
             ??_Delay_Ms 001F             ??i2_Delay_us 0003               ??_Delay_us 001F  
                _TIMER_H 0059                  _TIMER_L 0058              ?_Sound_Play 0047  
    __end_of_Myusartinit 120A             ??i2_Send2Lcd 0009               ??_Send2Lcd 0025  
        __size_ofi2_Data 0018                  __Hparam 0000                  __Lparam 0000  
     __end_ofi2_Delay_us 11F0                  ___ftadd 07CE                  ___ftdiv 0CD0  
                ___ftneg 118C          __size_of___wmul 0026                  ___fttol 0BDC  
           __psmallconst 0600                  __pcinit 0F48               ??___awtoft 0028  
             ??___ftpack 0022                  __ramtop 0600          __size_of_tc_int 07C6  
              Data@Value 0021                  __ptext0 097A                  __ptext1 1142  
                __ptext2 0ADC                  __ptext3 1168                  __ptext4 0BDC  
                __ptext5 118C                  __ptext6 0CD0                  __ptext7 07CE  
                __ptext8 10AC                  __ptext9 0E9A               ??___lwtoft 0028  
              _T0CONbits 000FD5             __size_of_Cmd 0018                  _receive 0054  
     __end_ofi2_Send2Lcd 10AC           Sound_Play@freq 0047           __pintcode_body 061C  
   end_of_initialization 0FB4                Delay_Ms@j 0020                Delay_Ms@s 001D  
          _Delay_Seconds 10E4                  int_func 061C                _RCSTAbits 000FAB  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE      __size_of_Sound_Play 0100                _TRISCbits 000F94  
            _Myusartinit 11F0           ?_Delay_Seconds 0001              ___ftdiv@exp 0035  
              _TXSTAbits 000FAC           __end_ofi2_Data 1252           __end_of___wmul 1168  
            _BAUDCONbits 000FB8            __pidataCOMRAM 126A           __end_of_tc_int 07CE  
    start_initialization 0F48              __end_of_Cmd 123A                _Durations 0080  
      __size_of_Delay_Ms 002A        __size_of_Delay_us 0020                 ??i2_Data 0007  
       __CFG_OSC$INTIO67 000000        __size_of_Send2Lcd 003A                 ??___wmul 0021  
            __pdataBANK0 0080              __pdataBANK1 0100         __CFG_LPT1OSC$OFF 000000  
               ??_tc_int 000A        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0050        __size_of___lwtoft 0024          ??_Delay_Seconds 001D  
           ??_Sound_Play 004B        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
               ?___ftadd 002C                 ?___ftdiv 0028                 ?___ftneg 0029  
               ?___fttol 0038       __end_of_Sound_Play 0BDC              __smallconst 0600  
         __size_ofi2_Cmd 0018                 Cmd@Value 0021             i2Delay_us@us 0001  
         ___wmul@product 0021                 _LATCbits 000F8B                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 i2u132_40 06C2                 i2u143_40 0762  
               i2u143_46 0764                 _PIR1bits 000F9E         Sound_Play@period 004B  
               _RCONbits 000FD0        ___wmul@multiplier 001D            i2Send2Lcd@Adr 0009  
          i2Send2Lcd@Lcd 0007                 _Delay_Ms 1118                 _Delay_us 11B0  
           ?_Myusartinit 0001                copy_data0 0F5C                copy_data1 0F7C  
              copy_data2 0F9C                 _Send2Lcd 1038                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600       __CFG_BOREN$SBORDIS 000000  
       __size_of___ftadd 01AC         __size_of___ftdiv 00E6         __size_of___ftneg 0024  
       __size_of___fttol 00F4                 ___awtoft 10AC                 ___ftpack 0E9A  
            i2Data@Value 0005                 ___lwtoft 1168                 _address1 005C  
               _address2 005A                 __ptext10 1118                 __ptext11 1038  
               __ptext20 1252                 __ptext12 120A                 __ptext21 11D0  
               __ptext13 1222                 __ptext14 11B0                 __ptext15 11F0  
               __ptext16 10E4                 __ptext18 1072                 __ptext19 123A  
          __size_of_Data 0018                 _countout 0050            __size_of_main 0162  
               int$flags 005E               _INTCONbits 000FF2               Delay_us@us 001D  
             i2Cmd@Value 0005                 intlevel2 0000               _OSCCONbits 000FD3  
     Sound_Play@duration 0049               i2_Delay_us 11D0    __end_of_Delay_Seconds 1118  
   __size_of_Myusartinit 001A               i2_Send2Lcd 1072  
